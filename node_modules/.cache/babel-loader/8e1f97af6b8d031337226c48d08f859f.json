{"ast":null,"code":"var _jsxFileName = \"/home/ec2-user/environment/project2-sap258/src/Board.js\",\n    _s = $RefreshSig$();\n\nimport './Board.css';\nimport React from 'react';\nimport { useState, useEffect, useRef } from 'react';\nimport { Squares } from './square.js';\nimport { ListItem } from './ListItem.js';\nimport { Table } from './table.js';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io();\nvar currentUser;\nexport function Board(props) {\n  _s();\n\n  const [board, setBoard] = useState([\" \"]);\n  const [turn, setTurn] = useState(\"\");\n  const [stateO, setStateO] = useState(0);\n  const [player, setPlayer] = useState([]);\n  const [spectator, setSpectator] = useState([]);\n  const inputRef = useRef(null);\n  const [showBoard, setShowBoard] = useState(false);\n  const [showWinner, setShowWinner] = useState(false);\n  const [winner, setWinner] = useState(\"\");\n  const [loser, setLoser] = useState(\"\");\n  const [showdraw, setDraw] = useState(false);\n  const [count, setCount] = useState(0);\n  const [db_user, setDB_user] = useState([]);\n  const [db_rank, setDB_rank] = useState([]);\n  const [showLeaderboard, setShowLeaderboard] = useState(false);\n\n  function assigneUser() {\n    const inp = inputRef.current.value;\n\n    if (inp.length != 0 || currentUser == 0) {\n      try {\n        if (!player.includes(inp) && !spectator.includes(inp)) {\n          setShowBoard(true);\n          const inp = inputRef.current.value;\n          currentUser = inp;\n          console.log(\"user input: \" + inp);\n          socket.emit('assigne', {\n            val: inp\n          });\n        } else {\n          setShowBoard(false);\n          console.log(\"already in list\");\n          return;\n        }\n      } catch (err) {\n        console.log(err.message);\n        return;\n      }\n    } else {\n      setShowBoard(false);\n      return;\n    }\n  }\n\n  function Leaderboard() {\n    if (showLeaderboard === true) {\n      setShowLeaderboard(false);\n    } else {\n      setShowLeaderboard(true);\n    }\n\n    return;\n  }\n\n  function reset() {\n    if (player.includes(currentUser)) {\n      socket.emit('reset', {\n        user: currentUser\n      });\n      console.log('Reseting ' + currentUser);\n    }\n\n    return;\n  }\n\n  function calculateWinner(squares) {\n    const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n    for (let i = 0; i < lines.length; i++) {\n      const [a, b, c] = lines[i];\n\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n        return squares[a];\n      }\n    }\n\n    return null;\n  }\n\n  function onClickButton(i) {\n    if (calculateWinner(board)) {\n      return;\n    }\n\n    if (turn != currentUser || currentUser == null) {\n      return;\n    }\n\n    if (board[i] == 'X' || board[i] == 'O') {\n      return;\n    }\n\n    if (stateO == 1) {\n      board[i] = 'O';\n      setStateO(prevStateO => prevStateO - 1);\n    }\n\n    if (stateO == 0) {\n      board[i] = 'X';\n      setStateO(prevStateO => prevStateO + 1);\n    }\n\n    const newboard = [...board];\n    setBoard(newboard);\n\n    if (calculateWinner(board)) {\n      socket.emit('clicked', {\n        board: newboard,\n        val: newboard[i],\n        count: num\n      });\n\n      if (currentUser == player[0]) {\n        socket.emit('winner', {\n          winner: player[0],\n          loser: player[1]\n        });\n      }\n\n      if (currentUser == player[1]) {\n        socket.emit('winner', {\n          winner: player[1],\n          loser: player[0]\n        });\n      }\n\n      return;\n    }\n\n    if (currentUser == player[0] && player[1] != null) {\n      socket.emit('turns_update', {\n        user: player[1]\n      });\n    } else {\n      socket.emit('turns_update', {\n        user: player[0]\n      });\n    }\n\n    var num = count + 1;\n    setCount(num);\n    console.log(num);\n\n    if (num == 9) {\n      console.log(\"its a draw\");\n      setDraw(true);\n      socket.emit('draw', {\n        draw: showdraw\n      });\n    }\n\n    socket.emit('clicked', {\n      board: newboard,\n      val: newboard[i],\n      count: num\n    });\n    return newboard;\n  }\n\n  useEffect(() => {\n    socket.on('assigne_players', server_players => {\n      const pl = [...server_players];\n      setPlayer(pl);\n    });\n    socket.on('assigne_spectator', server_spectator => {\n      const sp = [...server_spectator];\n      setSpectator(sp);\n    });\n    socket.on('first_turns', data => {\n      setTurn(data);\n      console.log(\"First turn: \" + data);\n    });\n    socket.on('turns_update', data => {\n      var x = data.user;\n      setTurn(x);\n      console.log(\"Turn updaed to: \" + x);\n      console.log(\"after update turn: \" + turn);\n    });\n    socket.on('winner', data => {\n      console.log(\"winner is desided\");\n      var win = data.winner;\n      var los = data.loser;\n      setWinner(win);\n      setLoser(los);\n      setShowWinner(true);\n    });\n    socket.on('draw', data => {\n      setDraw(true);\n    });\n    socket.on('reset', data => {\n      console.log(\"Reseting the game now\");\n      setBoard([\"\"]);\n      setDraw(false);\n      setShowWinner(false);\n      setCount(0);\n    });\n    socket.on('clicked', data => {\n      const newboard = [...data.board];\n      const no = data.count;\n      setCount(no);\n      console.log(\"count set to: \" + no);\n\n      if (data.val == 'X') {\n        setStateO(1);\n      } else {\n        setStateO(0);\n      }\n\n      setBoard(newboard);\n    });\n    socket.on('user_list', data => {\n      setDB_user(data.user);\n      setDB_rank(data.rank);\n      console.log(data);\n    });\n    socket.on('connect', data => {\n      try {\n        setPlayer(data.server_players);\n        setSpectator(data.server_spectator);\n      } catch (err) {\n        setPlayer(null);\n        setSpectator(null);\n        console.log(err.message);\n      }\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Enter your username: \", /*#__PURE__*/_jsxDEV(\"input\", {\n      ref: inputRef,\n      type: \"text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 28\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: assigneUser,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 7\n    }, this), showBoard === true ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"right\",\n        children: [\"Players:\", /*#__PURE__*/_jsxDEV(\"ol\", {\n          children: player.map(users => /*#__PURE__*/_jsxDEV(ListItem, {\n            name: users\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 32\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"right1\",\n        children: [\"Spectator:\", /*#__PURE__*/_jsxDEV(\"ol\", {\n          children: spectator.map(users => /*#__PURE__*/_jsxDEV(ListItem, {\n            name: users\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 35\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Turn: \", turn]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }, this), showdraw === true ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"This game is a draw.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: reset,\n          children: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this) : null, showWinner === true ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Winner of the game is \", winner, \".\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Losser of the game is \", loser, \".\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: reset,\n          children: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 9\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: Leaderboard,\n        children: \" Show/Hide Leaderboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 9\n      }, this), showLeaderboard === true ? /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"right2\",\n        children: [\"Leader Board:\", /*#__PURE__*/_jsxDEV(\"table\", {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Users\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Ranks\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 9\n          }, this), db_user.map((users, index) => /*#__PURE__*/_jsxDEV(Table, {\n            name: users,\n            rank: db_rank[index]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 40\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 9\n      }, this) : null, /*#__PURE__*/_jsxDEV(Squares, {\n        onClickButton: onClickButton,\n        val: board\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 7\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 229,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Board, \"7rliUGBIxuGWdqymg6K90gU7YDQ=\");\n\n_c = Board;\n\nvar _c;\n\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"sources":["/home/ec2-user/environment/project2-sap258/src/Board.js"],"names":["React","useState","useEffect","useRef","Squares","ListItem","Table","io","socket","currentUser","Board","props","board","setBoard","turn","setTurn","stateO","setStateO","player","setPlayer","spectator","setSpectator","inputRef","showBoard","setShowBoard","showWinner","setShowWinner","winner","setWinner","loser","setLoser","showdraw","setDraw","count","setCount","db_user","setDB_user","db_rank","setDB_rank","showLeaderboard","setShowLeaderboard","assigneUser","inp","current","value","length","includes","console","log","emit","val","err","message","Leaderboard","reset","user","calculateWinner","squares","lines","i","a","b","c","onClickButton","prevStateO","newboard","num","draw","on","server_players","pl","server_spectator","sp","data","x","win","los","no","rank","map","users","index"],"mappings":";;;AAAA,OAAO,aAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,EAA8BC,MAA9B,QAA4C,OAA5C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,QAAyB,eAAzB;AACA,SAASC,KAAT,QAAsB,YAAtB;AACA,OAAOC,EAAP,MAAe,kBAAf;;AAEA,MAAMC,MAAM,GAAGD,EAAE,EAAjB;AACA,IAAIE,WAAJ;AACA,OAAO,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAAA;;AAE3B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,CAAC,GAAD,CAAD,CAAlC;AACA,QAAM,CAACa,IAAD,EAAOC,OAAP,IAAkBd,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACe,MAAD,EAASC,SAAT,IAAsBhB,QAAQ,CAAC,CAAD,CAApC;AACA,QAAM,CAACiB,MAAD,EAASC,SAAT,IAAsBlB,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACmB,SAAD,EAAYC,YAAZ,IAA4BpB,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAMqB,QAAQ,GAAGnB,MAAM,CAAC,IAAD,CAAvB;AACA,QAAM,CAACoB,SAAD,EAAYC,YAAZ,IAA4BvB,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACwB,UAAD,EAAaC,aAAb,IAA8BzB,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAAC0B,MAAD,EAASC,SAAT,IAAsB3B,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAAC4B,KAAD,EAAQC,QAAR,IAAoB7B,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAAC8B,QAAD,EAAWC,OAAX,IAAsB/B,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACgC,KAAD,EAAQC,QAAR,IAAoBjC,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM,CAACkC,OAAD,EAAUC,UAAV,IAAwBnC,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACoC,OAAD,EAAUC,UAAV,IAAwBrC,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACsC,eAAD,EAAkBC,kBAAlB,IAAwCvC,QAAQ,CAAC,KAAD,CAAtD;;AAEA,WAASwC,WAAT,GAAsB;AACpB,UAAMC,GAAG,GAAGpB,QAAQ,CAACqB,OAAT,CAAiBC,KAA7B;;AACA,QAAGF,GAAG,CAACG,MAAJ,IAAc,CAAd,IAAmBpC,WAAW,IAAI,CAArC,EAAuC;AACrC,UAAG;AACD,YAAG,CAACS,MAAM,CAAC4B,QAAP,CAAgBJ,GAAhB,CAAD,IAAyB,CAACtB,SAAS,CAAC0B,QAAV,CAAmBJ,GAAnB,CAA7B,EAAqD;AACnDlB,UAAAA,YAAY,CAAC,IAAD,CAAZ;AACA,gBAAMkB,GAAG,GAAGpB,QAAQ,CAACqB,OAAT,CAAiBC,KAA7B;AACAnC,UAAAA,WAAW,GAAGiC,GAAd;AACAK,UAAAA,OAAO,CAACC,GAAR,CAAY,iBAAiBN,GAA7B;AACAlC,UAAAA,MAAM,CAACyC,IAAP,CAAY,SAAZ,EAAuB;AAACC,YAAAA,GAAG,EAAER;AAAN,WAAvB;AACD,SAND,MAOI;AACFlB,UAAAA,YAAY,CAAC,KAAD,CAAZ;AACAuB,UAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACA;AACD;AACF,OAbD,CAcA,OAAMG,GAAN,EAAU;AACRJ,QAAAA,OAAO,CAACC,GAAR,CAAYG,GAAG,CAACC,OAAhB;AACA;AACD;AACF,KAnBD,MAoBI;AACF5B,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACA;AACD;AACF;;AAED,WAAS6B,WAAT,GAAsB;AACpB,QAAGd,eAAe,KAAK,IAAvB,EAA4B;AAC1BC,MAAAA,kBAAkB,CAAC,KAAD,CAAlB;AACD,KAFD,MAGI;AACFA,MAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACD;;AACD;AACD;;AAED,WAASc,KAAT,GAAgB;AACd,QAAGpC,MAAM,CAAC4B,QAAP,CAAgBrC,WAAhB,CAAH,EAAgC;AAC9BD,MAAAA,MAAM,CAACyC,IAAP,CAAY,OAAZ,EAAqB;AAACM,QAAAA,IAAI,EAAC9C;AAAN,OAArB;AACAsC,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAcvC,WAA1B;AACD;;AACD;AACD;;AAED,WAAS+C,eAAT,CAAyBC,OAAzB,EAAkC;AAChC,UAAMC,KAAK,GAAG,CACZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CADY,EAEZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAFY,EAGZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAHY,EAIZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAJY,EAKZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CALY,EAMZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CANY,EAOZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAPY,EAQZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CARY,CAAd;;AAUA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,KAAK,CAACb,MAA1B,EAAkCc,CAAC,EAAnC,EAAuC;AACrC,YAAM,CAACC,CAAD,EAAIC,CAAJ,EAAOC,CAAP,IAAYJ,KAAK,CAACC,CAAD,CAAvB;;AACA,UAAIF,OAAO,CAACG,CAAD,CAAP,IAAcH,OAAO,CAACG,CAAD,CAAP,KAAeH,OAAO,CAACI,CAAD,CAApC,IAA2CJ,OAAO,CAACG,CAAD,CAAP,KAAeH,OAAO,CAACK,CAAD,CAArE,EAA0E;AACxE,eAAOL,OAAO,CAACG,CAAD,CAAd;AACD;AACF;;AACH,WAAO,IAAP;AACC;;AAED,WAASG,aAAT,CAAuBJ,CAAvB,EAA0B;AACxB,QAAGH,eAAe,CAAC5C,KAAD,CAAlB,EAA0B;AACxB;AACD;;AACD,QAAGE,IAAI,IAAIL,WAAR,IAAuBA,WAAW,IAAI,IAAzC,EAA8C;AAC5C;AACD;;AACD,QAAGG,KAAK,CAAC+C,CAAD,CAAL,IAAY,GAAZ,IAAmB/C,KAAK,CAAC+C,CAAD,CAAL,IAAY,GAAlC,EAAsC;AACpC;AACD;;AACD,QAAG3C,MAAM,IAAI,CAAb,EAAe;AACbJ,MAAAA,KAAK,CAAC+C,CAAD,CAAL,GAAW,GAAX;AACA1C,MAAAA,SAAS,CAAE+C,UAAD,IAAgBA,UAAU,GAAG,CAA9B,CAAT;AACD;;AACD,QAAGhD,MAAM,IAAI,CAAb,EAAe;AACbJ,MAAAA,KAAK,CAAC+C,CAAD,CAAL,GAAW,GAAX;AACA1C,MAAAA,SAAS,CAAE+C,UAAD,IAAgBA,UAAU,GAAG,CAA9B,CAAT;AACD;;AAED,UAAMC,QAAQ,GAAG,CAAC,GAAGrD,KAAJ,CAAjB;AACAC,IAAAA,QAAQ,CAACoD,QAAD,CAAR;;AAEA,QAAGT,eAAe,CAAC5C,KAAD,CAAlB,EAA0B;AACxBJ,MAAAA,MAAM,CAACyC,IAAP,CAAY,SAAZ,EAAuB;AAACrC,QAAAA,KAAK,EAAEqD,QAAR;AAAkBf,QAAAA,GAAG,EAAEe,QAAQ,CAACN,CAAD,CAA/B;AAAoC1B,QAAAA,KAAK,EAACiC;AAA1C,OAAvB;;AACA,UAAGzD,WAAW,IAAIS,MAAM,CAAC,CAAD,CAAxB,EAA4B;AAC1BV,QAAAA,MAAM,CAACyC,IAAP,CAAY,QAAZ,EAAsB;AAACtB,UAAAA,MAAM,EAACT,MAAM,CAAC,CAAD,CAAd;AAAmBW,UAAAA,KAAK,EAACX,MAAM,CAAC,CAAD;AAA/B,SAAtB;AACD;;AACD,UAAGT,WAAW,IAAIS,MAAM,CAAC,CAAD,CAAxB,EAA4B;AAC1BV,QAAAA,MAAM,CAACyC,IAAP,CAAY,QAAZ,EAAsB;AAACtB,UAAAA,MAAM,EAACT,MAAM,CAAC,CAAD,CAAd;AAAmBW,UAAAA,KAAK,EAACX,MAAM,CAAC,CAAD;AAA/B,SAAtB;AACD;;AACD;AACD;;AAED,QAAGT,WAAW,IAAIS,MAAM,CAAC,CAAD,CAArB,IAA4BA,MAAM,CAAC,CAAD,CAAN,IAAa,IAA5C,EAAiD;AAC/CV,MAAAA,MAAM,CAACyC,IAAP,CAAY,cAAZ,EAA4B;AAACM,QAAAA,IAAI,EAACrC,MAAM,CAAC,CAAD;AAAZ,OAA5B;AACD,KAFD,MAGI;AACFV,MAAAA,MAAM,CAACyC,IAAP,CAAY,cAAZ,EAA4B;AAACM,QAAAA,IAAI,EAACrC,MAAM,CAAC,CAAD;AAAZ,OAA5B;AACD;;AAED,QAAIgD,GAAG,GAAGjC,KAAK,GAAG,CAAlB;AACAC,IAAAA,QAAQ,CAACgC,GAAD,CAAR;AACAnB,IAAAA,OAAO,CAACC,GAAR,CAAYkB,GAAZ;;AACA,QAAGA,GAAG,IAAI,CAAV,EAAY;AACVnB,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACAhB,MAAAA,OAAO,CAAC,IAAD,CAAP;AACAxB,MAAAA,MAAM,CAACyC,IAAP,CAAY,MAAZ,EAAoB;AAACkB,QAAAA,IAAI,EAACpC;AAAN,OAApB;AACD;;AAEDvB,IAAAA,MAAM,CAACyC,IAAP,CAAY,SAAZ,EAAuB;AAACrC,MAAAA,KAAK,EAAEqD,QAAR;AAAkBf,MAAAA,GAAG,EAAEe,QAAQ,CAACN,CAAD,CAA/B;AAAoC1B,MAAAA,KAAK,EAACiC;AAA1C,KAAvB;AACA,WAAOD,QAAP;AACD;;AAED/D,EAAAA,SAAS,CAAC,MAAM;AAEdM,IAAAA,MAAM,CAAC4D,EAAP,CAAU,iBAAV,EAA8BC,cAAD,IAAoB;AAC/C,YAAMC,EAAE,GAAG,CAAC,GAAGD,cAAJ,CAAX;AACAlD,MAAAA,SAAS,CAACmD,EAAD,CAAT;AACD,KAHD;AAKA9D,IAAAA,MAAM,CAAC4D,EAAP,CAAU,mBAAV,EAAgCG,gBAAD,IAAsB;AACnD,YAAMC,EAAE,GAAG,CAAC,GAAGD,gBAAJ,CAAX;AACAlD,MAAAA,YAAY,CAACmD,EAAD,CAAZ;AACD,KAHD;AAKAhE,IAAAA,MAAM,CAAC4D,EAAP,CAAU,aAAV,EAA0BK,IAAD,IAAU;AACjC1D,MAAAA,OAAO,CAAC0D,IAAD,CAAP;AACA1B,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAiByB,IAA7B;AACD,KAHD;AAKAjE,IAAAA,MAAM,CAAC4D,EAAP,CAAU,cAAV,EAA2BK,IAAD,IAAU;AAClC,UAAIC,CAAC,GAAGD,IAAI,CAAClB,IAAb;AACAxC,MAAAA,OAAO,CAAC2D,CAAD,CAAP;AACA3B,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAqB0B,CAAjC;AACA3B,MAAAA,OAAO,CAACC,GAAR,CAAY,wBAAwBlC,IAApC;AACD,KALD;AAOAN,IAAAA,MAAM,CAAC4D,EAAP,CAAU,QAAV,EAAqBK,IAAD,IAAS;AAC3B1B,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACA,UAAI2B,GAAG,GAAGF,IAAI,CAAC9C,MAAf;AACA,UAAIiD,GAAG,GAAGH,IAAI,CAAC5C,KAAf;AACAD,MAAAA,SAAS,CAAC+C,GAAD,CAAT;AACA7C,MAAAA,QAAQ,CAAC8C,GAAD,CAAR;AACAlD,MAAAA,aAAa,CAAC,IAAD,CAAb;AACD,KAPD;AASAlB,IAAAA,MAAM,CAAC4D,EAAP,CAAU,MAAV,EAAmBK,IAAD,IAAU;AAC1BzC,MAAAA,OAAO,CAAC,IAAD,CAAP;AACD,KAFD;AAIAxB,IAAAA,MAAM,CAAC4D,EAAP,CAAU,OAAV,EAAoBK,IAAD,IAAU;AAC3B1B,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACAnC,MAAAA,QAAQ,CAAC,CAAC,EAAD,CAAD,CAAR;AACAmB,MAAAA,OAAO,CAAC,KAAD,CAAP;AACAN,MAAAA,aAAa,CAAC,KAAD,CAAb;AACAQ,MAAAA,QAAQ,CAAC,CAAD,CAAR;AACD,KAND;AAQA1B,IAAAA,MAAM,CAAC4D,EAAP,CAAU,SAAV,EAAsBK,IAAD,IAAU;AAC7B,YAAMR,QAAQ,GAAG,CAAC,GAAGQ,IAAI,CAAC7D,KAAT,CAAjB;AACA,YAAMiE,EAAE,GAAGJ,IAAI,CAACxC,KAAhB;AACAC,MAAAA,QAAQ,CAAC2C,EAAD,CAAR;AACA9B,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAmB6B,EAA/B;;AACA,UAAGJ,IAAI,CAACvB,GAAL,IAAY,GAAf,EAAmB;AACjBjC,QAAAA,SAAS,CAAC,CAAD,CAAT;AACD,OAFD,MAGI;AACFA,QAAAA,SAAS,CAAC,CAAD,CAAT;AACD;;AACDJ,MAAAA,QAAQ,CAACoD,QAAD,CAAR;AACD,KAZD;AAcAzD,IAAAA,MAAM,CAAC4D,EAAP,CAAU,WAAV,EAAwBK,IAAD,IAAU;AAC/BrC,MAAAA,UAAU,CAACqC,IAAI,CAAClB,IAAN,CAAV;AACAjB,MAAAA,UAAU,CAACmC,IAAI,CAACK,IAAN,CAAV;AACA/B,MAAAA,OAAO,CAACC,GAAR,CAAYyB,IAAZ;AACD,KAJD;AAMAjE,IAAAA,MAAM,CAAC4D,EAAP,CAAU,SAAV,EAAsBK,IAAD,IAAU;AAE7B,UAAI;AACFtD,QAAAA,SAAS,CAACsD,IAAI,CAACJ,cAAN,CAAT;AACAhD,QAAAA,YAAY,CAACoD,IAAI,CAACF,gBAAN,CAAZ;AACD,OAHD,CAIA,OAAMpB,GAAN,EAAW;AACThC,QAAAA,SAAS,CAAC,IAAD,CAAT;AACAE,QAAAA,YAAY,CAAC,IAAD,CAAZ;AACA0B,QAAAA,OAAO,CAACC,GAAR,CAAYG,GAAG,CAACC,OAAhB;AACD;AACF,KAXD;AAaD,GA9EQ,EA8EN,EA9EM,CAAT;AAgFA,sBACE;AAAA,qDACuB;AAAO,MAAA,GAAG,EAAE9B,QAAZ;AAAsB,MAAA,IAAI,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,YADvB,eAEE;AAAQ,MAAA,OAAO,EAAEmB,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,EAIGlB,SAAS,KAAK,IAAd,gBACD;AAAA,8BAEE;AAAK,QAAA,KAAK,EAAC,OAAX;AAAA,4CAEE;AAAA,oBACCL,MAAM,CAAC6D,GAAP,CAAWC,KAAK,iBAAI,QAAC,QAAD;AAAU,YAAA,IAAI,EAAEA;AAAhB;AAAA;AAAA;AAAA;AAAA,kBAApB;AADD;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eASE;AAAK,QAAA,KAAK,EAAC,QAAX;AAAA,8CAEE;AAAA,oBACC5D,SAAS,CAAC2D,GAAV,CAAcC,KAAK,iBAAI,QAAC,QAAD;AAAU,YAAA,IAAI,EAAEA;AAAhB;AAAA;AAAA;AAAA;AAAA,kBAAvB;AADD;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cATF,eAgBE;AAAA,6BAAUlE,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA,cAhBF,EAkBGiB,QAAQ,KAAK,IAAb,gBACD;AAAA,gCACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,eAEA;AAAQ,UAAA,OAAO,EAAEuB,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,cADC,GAKG,IAvBN,EAyBG7B,UAAU,KAAK,IAAf,gBACD;AAAA,gCACA;AAAA,+CAA0BE,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,eAEA;AAAA,+CAA0BE,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFA,eAGA;AAAQ,UAAA,OAAO,EAAEyB,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHA;AAAA;AAAA;AAAA;AAAA;AAAA,cADC,GAMG,IA/BN,eAiCE;AAAQ,QAAA,OAAO,EAAED,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAjCF,EAkCGd,eAAe,KAAK,IAApB,gBACD;AAAK,QAAA,KAAK,EAAC,QAAX;AAAA,iDAEA;AAAA,kCACA;AAAA,oCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADA,EAKCJ,OAAO,CAAC4C,GAAR,CAAY,CAACC,KAAD,EAAQC,KAAR,kBAAkB,QAAC,KAAD;AAAO,YAAA,IAAI,EAAED,KAAb;AAAoB,YAAA,IAAI,EAAE3C,OAAO,CAAC4C,KAAD;AAAjC;AAAA;AAAA;AAAA;AAAA,kBAA9B,CALD;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,cADC,GAWG,IA7CN,eA+CE,QAAC,OAAD;AAAS,QAAA,aAAa,EAAElB,aAAxB;AAAuC,QAAA,GAAG,EAAEnD;AAA5C;AAAA;AAAA;AAAA;AAAA,cA/CF;AAAA;AAAA;AAAA;AAAA;AAAA,YADC,GAkDG,IAtDN;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2DD;;GApReF,K;;KAAAA,K","sourcesContent":["import './Board.css';\nimport React from 'react';\nimport { useState, useEffect, useRef } from 'react';\nimport { Squares } from './square.js';\nimport { ListItem } from './ListItem.js';\nimport { Table } from './table.js';\nimport io from 'socket.io-client';\n\nconst socket = io();\nvar currentUser;\nexport function Board(props) {\n  \n  const [board, setBoard] = useState([\" \"]);\n  const [turn, setTurn] = useState(\"\");\n  const [stateO, setStateO] = useState(0);\n  const [player, setPlayer] = useState([]);\n  const [spectator, setSpectator] = useState([]);\n  const inputRef = useRef(null);\n  const [showBoard, setShowBoard] = useState(false);\n  const [showWinner, setShowWinner] = useState(false);\n  const [winner, setWinner] = useState(\"\");\n  const [loser, setLoser] = useState(\"\");\n  const [showdraw, setDraw] = useState(false);\n  const [count, setCount] = useState(0);\n  const [db_user, setDB_user] = useState([]);\n  const [db_rank, setDB_rank] = useState([]);\n  const [showLeaderboard, setShowLeaderboard] = useState(false);\n\n  function assigneUser(){\n    const inp = inputRef.current.value;\n    if(inp.length != 0 || currentUser == 0){\n      try{\n        if(!player.includes(inp) && !spectator.includes(inp)){\n          setShowBoard(true);\n          const inp = inputRef.current.value;\n          currentUser = inp;\n          console.log(\"user input: \" + inp);\n          socket.emit('assigne', {val: inp});\n        }\n        else{\n          setShowBoard(false);\n          console.log(\"already in list\");\n          return;\n        }\n      }\n      catch(err){\n        console.log(err.message);\n        return;\n      }\n    }\n    else{\n      setShowBoard(false);\n      return;\n    }\n  }\n  \n  function Leaderboard(){\n    if(showLeaderboard === true){\n      setShowLeaderboard(false);\n    }\n    else{\n      setShowLeaderboard(true);\n    }\n    return;\n  }\n  \n  function reset(){\n    if(player.includes(currentUser)){\n      socket.emit('reset', {user:currentUser});\n      console.log('Reseting ' + currentUser);\n    }\n    return;\n  }\n\n  function calculateWinner(squares) {\n    const lines = [\n      [0, 1, 2],\n      [3, 4, 5],\n      [6, 7, 8],\n      [0, 3, 6],\n      [1, 4, 7],\n      [2, 5, 8],\n      [0, 4, 8],\n      [2, 4, 6],\n    ];\n    for (let i = 0; i < lines.length; i++) {\n      const [a, b, c] = lines[i];\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n        return squares[a];\n      }\n    }\n  return null;\n  }\n\n  function onClickButton(i) {\n    if(calculateWinner(board)){\n      return;\n    }\n    if(turn != currentUser || currentUser == null){\n      return;\n    }\n    if(board[i] == 'X' || board[i] == 'O'){\n      return;\n    }\n    if(stateO == 1){\n      board[i] = 'O';\n      setStateO((prevStateO) => prevStateO - 1);\n    }\n    if(stateO == 0){\n      board[i] = 'X';\n      setStateO((prevStateO) => prevStateO + 1);\n    }\n    \n    const newboard = [...board];\n    setBoard(newboard);\n    \n    if(calculateWinner(board)){\n      socket.emit('clicked', {board: newboard, val: newboard[i], count:num});\n      if(currentUser == player[0]){\n        socket.emit('winner', {winner:player[0], loser:player[1]});\n      }\n      if(currentUser == player[1]){\n        socket.emit('winner', {winner:player[1], loser:player[0]});\n      }\n      return;\n    }\n    \n    if(currentUser == player[0] && player[1] != null){\n      socket.emit('turns_update', {user:player[1]});\n    }\n    else{\n      socket.emit('turns_update', {user:player[0]});\n    }\n    \n    var num = count + 1;\n    setCount(num);\n    console.log(num);\n    if(num == 9){\n      console.log(\"its a draw\");\n      setDraw(true);\n      socket.emit('draw', {draw:showdraw});\n    }\n    \n    socket.emit('clicked', {board: newboard, val: newboard[i], count:num});\n    return newboard;\n  }\n  \n  useEffect(() => {\n    \n    socket.on('assigne_players', (server_players) => {\n      const pl = [...server_players];\n      setPlayer(pl);\n    });\n    \n    socket.on('assigne_spectator', (server_spectator) => {\n      const sp = [...server_spectator];\n      setSpectator(sp);\n    });\n    \n    socket.on('first_turns', (data) => {\n      setTurn(data);\n      console.log(\"First turn: \" + data);\n    });\n    \n    socket.on('turns_update', (data) => {\n      var x = data.user;\n      setTurn(x);\n      console.log(\"Turn updaed to: \" + x);\n      console.log(\"after update turn: \" + turn);\n    });\n    \n    socket.on('winner', (data) =>{\n      console.log(\"winner is desided\");\n      var win = data.winner;\n      var los = data.loser;\n      setWinner(win);\n      setLoser(los);\n      setShowWinner(true);\n    });\n    \n    socket.on('draw', (data) => {\n      setDraw(true);\n    });\n    \n    socket.on('reset', (data) => {\n      console.log(\"Reseting the game now\");\n      setBoard([\"\"]);\n      setDraw(false);\n      setShowWinner(false);\n      setCount(0);\n    });\n    \n    socket.on('clicked', (data) => {\n      const newboard = [...data.board];\n      const no = data.count;\n      setCount(no);\n      console.log(\"count set to: \" + no);\n      if(data.val == 'X'){\n        setStateO(1);\n      }\n      else{\n        setStateO(0);\n      }\n      setBoard(newboard);\n    });\n    \n    socket.on('user_list', (data) => {\n      setDB_user(data.user);\n      setDB_rank(data.rank);\n      console.log(data);\n    });\n    \n    socket.on('connect', (data) => {\n      \n      try {\n        setPlayer(data.server_players);\n        setSpectator(data.server_spectator);\n      }\n      catch(err) {\n        setPlayer(null);\n        setSpectator(null);\n        console.log(err.message);\n      }\n    });\n    \n  }, []);\n  \n  return (\n    <div>\n      Enter your username: <input ref={inputRef} type='text' />\n      <button onClick={assigneUser}>Submit</button>\n      \n      {showBoard === true ?(\n      <div>\n      \n        <div class=\"right\">\n        Players:\n          <ol>\n          {player.map(users => <ListItem name={users} />)}\n          </ol>\n        </div>\n      \n        <div class=\"right1\">\n        Spectator:\n          <ol>\n          {spectator.map(users => <ListItem name={users} />)}\n          </ol>\n        </div>\n        \n        <p>Turn: {turn}</p>\n        \n        {showdraw === true ?(\n        <div>\n        <p>This game is a draw.</p>\n        <button onClick={reset}>Reset</button>\n        </div>\n        ) : null}\n        \n        {showWinner === true ?(\n        <div>\n        <p>Winner of the game is {winner}.</p>\n        <p>Losser of the game is {loser}.</p>\n        <button onClick={reset}>Reset</button>\n        </div>\n        ) : null}\n        \n        <button onClick={Leaderboard}> Show/Hide Leaderboard</button>\n        {showLeaderboard === true ?(\n        <div class=\"right2\">\n        Leader Board:\n        <table>\n        <tr>\n          <th>Users</th>\n          <th>Ranks</th>\n        </tr>\n        {db_user.map((users, index) => <Table name={users} rank={db_rank[index]} />)}\n        </table>\n        </div>\n        ) : null}\n        \n        <Squares onClickButton={onClickButton} val={board} />\n      </div>\n      ) : null}\n    </div>\n    \n  );\n}"]},"metadata":{},"sourceType":"module"}