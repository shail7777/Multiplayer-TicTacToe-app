{"ast":null,"code":"var _jsxFileName = \"/home/ec2-user/environment/react-starter/src/App.js\",\n    _s = $RefreshSig$();\n\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport { ListItem } from './ListItem.js';\nimport { useState, useRef, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io(); // Connects to socket connection\n\nfunction App() {\n  _s();\n\n  const [messages, setMessages] = useState([]); // State variable, list of messages\n\n  const inputRef = useRef(null); // Reference to <input> element\n\n  function onClickButton() {\n    if (inputRef != null) {\n      const message = inputRef.current.value; // If your own client sends a message, we add it to the list of messages to \n      // render it on the UI.\n\n      console.log(\"Before set: \" + message);\n      setMessages(prevMessages => [...prevMessages, message]);\n      console.log(\"After set: \" + message);\n      socket.emit('chat', {\n        message: message\n      });\n      console.log(\"After emit: \" + message);\n    }\n  } // The function inside useEffect is only run whenever any variable in the array\n  // (passed as the second arg to useEffect) changes. Since this array is empty\n  // here, then the function will only run once at the very beginning of mounting.\n\n\n  useEffect(() => {\n    // Listening for a chat event emitted by the server. If received, we\n    // run the code in the function that is passed in as the second arg\n    socket.on('chat', data => {\n      console.log('Chat event received!');\n      console.log(data); // If the server sends a message (on behalf of another client), then we\n      // add it to the list of messages to render it on the UI.\n\n      setMessages(prevMessages => [...prevMessages, data.message]);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Chat Messages\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), \"Enter message here: \", /*#__PURE__*/_jsxDEV(\"input\", {\n      ref: inputRef,\n      type: \"text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 27\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onClickButton,\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: messages.map((item, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n        name: item\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 40\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"yUA056DZnKLvQC18hvFaNWF8uws=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/ec2-user/environment/react-starter/src/App.js"],"names":["ListItem","useState","useRef","useEffect","io","socket","App","messages","setMessages","inputRef","onClickButton","message","current","value","console","log","prevMessages","emit","on","data","map","item","index"],"mappings":";;;;AACA,OAAO,WAAP;AACA,SAASA,QAAT,QAAyB,eAAzB;AACA,SAASC,QAAT,EAAmBC,MAAnB,EAA2BC,SAA3B,QAA4C,OAA5C;AACA,OAAOC,EAAP,MAAe,kBAAf;;AAEA,MAAMC,MAAM,GAAGD,EAAE,EAAjB,C,CAAqB;;AAErB,SAASE,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,EAAD,CAAxC,CADa,CACiC;;AAC9C,QAAMQ,QAAQ,GAAGP,MAAM,CAAC,IAAD,CAAvB,CAFa,CAEkB;;AAE/B,WAASQ,aAAT,GAAyB;AACvB,QAAID,QAAQ,IAAI,IAAhB,EAAsB;AACpB,YAAME,OAAO,GAAGF,QAAQ,CAACG,OAAT,CAAiBC,KAAjC,CADoB,CAEpB;AACA;;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAiBJ,OAA7B;AACAH,MAAAA,WAAW,CAACQ,YAAY,IAAI,CAAC,GAAGA,YAAJ,EAAkBL,OAAlB,CAAjB,CAAX;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAgBJ,OAA5B;AACAN,MAAAA,MAAM,CAACY,IAAP,CAAY,MAAZ,EAAoB;AAAEN,QAAAA,OAAO,EAAEA;AAAX,OAApB;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAiBJ,OAA7B;AACD;AACF,GAfY,CAiBb;AACA;AACA;;;AACAR,EAAAA,SAAS,CAAC,MAAM;AACd;AACA;AACAE,IAAAA,MAAM,CAACa,EAAP,CAAU,MAAV,EAAmBC,IAAD,IAAU;AAC1BL,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYI,IAAZ,EAF0B,CAG1B;AACA;;AACAX,MAAAA,WAAW,CAACQ,YAAY,IAAI,CAAC,GAAGA,YAAJ,EAAkBG,IAAI,CAACR,OAAvB,CAAjB,CAAX;AACD,KAND;AAOD,GAVQ,EAUN,EAVM,CAAT;AAYA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,uCAEsB;AAAO,MAAA,GAAG,EAAEF,QAAZ;AAAsB,MAAA,IAAI,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,YAFtB,eAGE;AAAQ,MAAA,OAAO,EAAEC,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAA,gBACGH,QAAQ,CAACa,GAAT,CAAa,CAACC,IAAD,EAAOC,KAAP,kBAAiB,QAAC,QAAD;AAAsB,QAAA,IAAI,EAAED;AAA5B,SAAeC,KAAf;AAAA;AAAA;AAAA;AAAA,cAA9B;AADH;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;GA1CQhB,G;;KAAAA,G;AA4CT,eAAeA,GAAf","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport { ListItem } from './ListItem.js';\nimport { useState, useRef, useEffect } from 'react';\nimport io from 'socket.io-client';\n\nconst socket = io(); // Connects to socket connection\n\nfunction App() {\n  const [messages, setMessages] = useState([]); // State variable, list of messages\n  const inputRef = useRef(null); // Reference to <input> element\n\n  function onClickButton() {\n    if (inputRef != null) {\n      const message = inputRef.current.value;\n      // If your own client sends a message, we add it to the list of messages to \n      // render it on the UI.\n      console.log(\"Before set: \" + message);\n      setMessages(prevMessages => [...prevMessages, message]);\n      console.log(\"After set: \" + message);\n      socket.emit('chat', { message: message });\n      console.log(\"After emit: \" + message)\n    }\n  }\n\n  // The function inside useEffect is only run whenever any variable in the array\n  // (passed as the second arg to useEffect) changes. Since this array is empty\n  // here, then the function will only run once at the very beginning of mounting.\n  useEffect(() => {\n    // Listening for a chat event emitted by the server. If received, we\n    // run the code in the function that is passed in as the second arg\n    socket.on('chat', (data) => {\n      console.log('Chat event received!');\n      console.log(data);\n      // If the server sends a message (on behalf of another client), then we\n      // add it to the list of messages to render it on the UI.\n      setMessages(prevMessages => [...prevMessages, data.message]);\n    });\n  }, []);\n\n  return (\n    <div>\n      <h1>Chat Messages</h1>\n      Enter message here: <input ref={inputRef} type=\"text\" />\n      <button onClick={onClickButton}>Send</button>\n      <ul>\n        {messages.map((item, index) => <ListItem key={index} name={item} />)}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}