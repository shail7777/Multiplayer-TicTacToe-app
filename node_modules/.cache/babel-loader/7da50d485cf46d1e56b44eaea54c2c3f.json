{"ast":null,"code":"var _jsxFileName = \"/home/ec2-user/environment/project2-sap258/src/Board.js\",\n    _s = $RefreshSig$();\n\nimport './Board.css';\nimport React from 'react';\nimport { useState, useEffect, useRef } from 'react';\nimport { Squares } from './square.js';\nimport { ListItem } from './ListItem.js';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io();\nvar num = 0;\nexport function Board(props) {\n  _s();\n\n  const [board, setBoard] = useState([\" \"]);\n  const [stateO, setStateO] = useState(0); //const [playerCount, setplayerCount] = useState(0);\n\n  const [player, setPlayer] = useState([]);\n  const [spectator, setSpectator] = useState([]);\n  const inputRef = useRef(null);\n  let currentUser = null;\n\n  function assigneUser() {\n    if (inputRef != null) {\n      const inp = inputRef.current.value;\n      currentUser = inp;\n      console.log(inp);\n      console.log(\"initial player count: \" + num);\n\n      if (num < 2) {\n        //setplayerCount(playerCount + num);\n        num = num + 1;\n        setPlayer(prePlayers => [...prePlayers, inp]);\n      } else {\n        setSpectator(preSpectator => [...preSpectator, inp]);\n      } //console.log(\"spectator: \" + spectator);\n      //console.log(\"player: \" + player);\n\n\n      console.log(\"Sending to server: \" + num);\n      socket.emit('assigne', {\n        val: inp,\n        count: num\n      });\n    }\n  }\n\n  function calculateWinner(squares) {\n    const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n    for (let i = 0; i < lines.length; i++) {\n      const [a, b, c] = lines[i];\n\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n        return squares[a];\n      }\n    }\n\n    return null;\n  }\n\n  function check() {\n    var i;\n\n    for (i = 0; i < 2; i++) {\n      if (player[i] == currentUser) {\n        return true;\n      } else {\n        continue;\n      }\n    }\n\n    return false;\n  }\n\n  function turns() {}\n\n  function onClickButton(i) {\n    if (check()) {\n      return;\n    }\n\n    if (board[i] == 'X' || board[i] == 'O') {\n      return;\n    }\n\n    if (stateO == 1) {\n      board[i] = 'O';\n      setStateO(prevStateO => prevStateO - 1);\n    }\n\n    if (stateO == 0) {\n      board[i] = 'X';\n      setStateO(prevStateO => prevStateO + 1);\n    }\n\n    const newboard = [...board];\n    setBoard(newboard);\n    /*if(calculateWinner(board)){\n      alert(\"You Won!!!\");\n      setBoard([]);\n    }*/\n\n    socket.emit('clicked', {\n      board: newboard,\n      val: newboard[i]\n    });\n    return newboard;\n  }\n\n  ;\n  useEffect(() => {\n    socket.on('assigne', data => {\n      const user = data.val;\n      const count = data.count; //setplayerCount(count);\n\n      num = count;\n      console.log(\"What server has sended: \" + num);\n\n      if (num < 2) {\n        setPlayer(prePlayers => [...prePlayers, user]);\n      } else {\n        setSpectator(preSpectator => [...preSpectator, user]);\n      } //console.log(\"useEffect Spectator: \" + spectator);\n      //console.log(\"useEffect Players: \" + player);\n\n\n      console.log(\"Final player count: \" + num);\n    });\n    socket.on('clicked', data => {\n      //console.log(\"Before useEffect borad: \" + board);\n      //console.log(\"Before useEffect sateO: \" + stateO);\n      const newboard = [...data.board];\n\n      if (data.val == 'X') {\n        setStateO(1);\n      } else {\n        setStateO(0);\n      }\n\n      setBoard(newboard); //console.log(\"After useEffect borad: \" + newboard);\n      //console.log(\"After useEffect sateO: \" + stateO);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Enter your username: \", /*#__PURE__*/_jsxDEV(\"input\", {\n      ref: inputRef,\n      type: \"text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 28\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: assigneUser,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"right\",\n      children: [\"Players:\", /*#__PURE__*/_jsxDEV(\"ol\", {\n        children: player.map(users => /*#__PURE__*/_jsxDEV(ListItem, {\n          name: users\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 32\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"right1\",\n      children: [\"Spectator:\", /*#__PURE__*/_jsxDEV(\"ol\", {\n        children: spectator.map(users => /*#__PURE__*/_jsxDEV(ListItem, {\n          name: users\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 35\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Squares, {\n      onClickButton: onClickButton,\n      val: board\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Board, \"LAxK0V/tErjvRJAPV8bbqlMQ4+g=\");\n\n_c = Board;\n\nvar _c;\n\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"sources":["/home/ec2-user/environment/project2-sap258/src/Board.js"],"names":["React","useState","useEffect","useRef","Squares","ListItem","io","socket","num","Board","props","board","setBoard","stateO","setStateO","player","setPlayer","spectator","setSpectator","inputRef","currentUser","assigneUser","inp","current","value","console","log","prePlayers","preSpectator","emit","val","count","calculateWinner","squares","lines","i","length","a","b","c","check","turns","onClickButton","prevStateO","newboard","on","data","user","map","users"],"mappings":"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","sourcesContent":["import './Board.css';\nimport React from 'react';\nimport { useState, useEffect, useRef } from 'react';\nimport { Squares } from './square.js';\nimport { ListItem } from './ListItem.js';\nimport io from 'socket.io-client';\n\nconst socket = io();\nvar num = 0;\nexport function Board(props) {\n  \n  const [board, setBoard] = useState([\" \"]);\n  const [stateO, setStateO] = useState(0);\n  //const [playerCount, setplayerCount] = useState(0);\n  const [player, setPlayer] = useState([]);\n  const [spectator, setSpectator] = useState([]);\n  const inputRef = useRef(null);\n  let currentUser = null;\n\n  function assigneUser(){\n    if(inputRef != null){\n      const inp = inputRef.current.value;\n      currentUser = inp;\n      console.log(inp);\n      console.log(\"initial player count: \" + num);\n      \n      if(num < 2){\n        //setplayerCount(playerCount + num);\n        num = num + 1;\n        setPlayer(prePlayers => [...prePlayers, inp]);\n      }\n      else{\n        setSpectator(preSpectator => [...preSpectator, inp]);\n      }\n      \n      //console.log(\"spectator: \" + spectator);\n      //console.log(\"player: \" + player);\n      console.log(\"Sending to server: \" + num);\n      socket.emit('assigne', {val: inp, count: num});\n    }\n  }\n\n\n  function calculateWinner(squares) {\n    const lines = [\n      [0, 1, 2],\n      [3, 4, 5],\n      [6, 7, 8],\n      [0, 3, 6],\n      [1, 4, 7],\n      [2, 5, 8],\n      [0, 4, 8],\n      [2, 4, 6],\n    ];\n    for (let i = 0; i < lines.length; i++) {\n      const [a, b, c] = lines[i];\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n        return squares[a];\n      }\n    }\n  return null;\n  }\n\nfunction check(){\n  var i\n  for (i = 0; i < 2; i++){\n    if(player[i] == currentUser){\n      return true;\n    }\n    else{\n      continue\n    }\n  }\n  return false;\n}\n\nfunction turns(){\n  \n}\n\n\n  function onClickButton(i) {\n    \n    if(check()){\n      return;\n    }\n    \n    if(board[i] == 'X' || board[i] == 'O'){\n      return;\n    }\n    \n    if(stateO == 1){\n      board[i] = 'O';\n      setStateO((prevStateO) => prevStateO - 1);\n    }\n    \n    if(stateO == 0){\n      board[i] = 'X';\n      setStateO((prevStateO) => prevStateO + 1);\n    }\n    \n    const newboard = [...board];\n    setBoard(newboard);\n    \n    /*if(calculateWinner(board)){\n      alert(\"You Won!!!\");\n      setBoard([]);\n    }*/\n    \n    socket.emit('clicked', {board: newboard, val: newboard[i]});\n    return newboard;\n  };\n  \n  useEffect(() => {\n    \n    socket.on('assigne', (data) => {\n      const user = data.val;\n      const count = data.count;\n      //setplayerCount(count);\n      num = count;\n      console.log(\"What server has sended: \" + num);\n      \n      if(num < 2){\n        setPlayer(prePlayers => [...prePlayers, user]);\n      }\n      \n      else{\n         setSpectator(preSpectator => [...preSpectator, user]);\n      }\n      \n      //console.log(\"useEffect Spectator: \" + spectator);\n      //console.log(\"useEffect Players: \" + player);\n      console.log(\"Final player count: \" + num);\n    })\n    \n    socket.on('clicked', (data) => {\n      //console.log(\"Before useEffect borad: \" + board);\n      //console.log(\"Before useEffect sateO: \" + stateO);\n    \n      const newboard = [...data.board];\n      if(data.val == 'X'){\n        setStateO(1);\n      }\n      else{\n        setStateO(0);\n      }\n      setBoard(newboard);\n      \n      //console.log(\"After useEffect borad: \" + newboard);\n      //console.log(\"After useEffect sateO: \" + stateO);\n    });\n    \n  }, []);\n  \n  return (\n    <div>\n      Enter your username: <input ref={inputRef} type='text' />\n      <button onClick={assigneUser}>Submit</button>\n      \n      <div class=\"right\">\n      Players:\n        <ol>\n          {player.map(users => <ListItem name={users} />)}\n        </ol>\n      </div>\n      \n      <div class=\"right1\">\n      Spectator:\n        <ol>\n          {spectator.map(users => <ListItem name={users} />)}\n        </ol>\n      </div>\n      \n      <Squares onClickButton={onClickButton} val={board} />\n    </div>\n    \n  );\n}"]},"metadata":{},"sourceType":"module"}