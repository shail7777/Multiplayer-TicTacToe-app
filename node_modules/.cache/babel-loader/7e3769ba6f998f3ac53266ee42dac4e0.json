{"ast":null,"code":"var _jsxFileName = \"/home/ec2-user/environment/react-starter/src/Board.js\",\n    _s = $RefreshSig$();\n\nimport './Board.css';\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { Squares } from './square.js';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io();\nconst [board, setBoard] = useState([Array(9).fill(\" \")]);\nconst [sateO, setStateO] = useState(1);\nexport function Board(props) {\n  _s();\n\n  function onClickButton(i) {\n    if (board.length == 9 || board[i] == 'X' | 'O') {\n      return;\n    } //const newboard = [...board]\n\n\n    if (sateO == 0) {\n      board[i] = 'O';\n      setStateO(sateO + 1);\n      setBoard(board); //console.log(newboard);\n    } else {\n      board[i] = 'X'; //const newboard = [...board]\n\n      setStateO(0);\n      setBoard(board); //console.log(newboard);\n    } //socket.emit('clicked', { tile : i, value : newboard[i] });\n\n\n    socket.emit('clicked', {\n      data: board\n    });\n  }\n\n  ;\n  useEffect(() => {\n    socket.on('clicked', data => {\n      console.log(\"Old board: \" + data.board);\n      console.log('Board is updating '); //console.log(\"tile: \" + data.tile);\n\n      /*\n      if(sateO == 0){\n        board[data.tile] = 'O';\n        setStateO(sateO+1);\n        console.log(\"Assigning: \" + newboard);\n      }\n      if(sateO == 1){\n        newboard[data.tile] = 'X';\n        setStateO(0);\n        console.log(\"Assigning: \" + newboard);\n      }*/\n      //setBoard(prevBoard => [...board]);\n\n      console.log(\"New borad: \" + board);\n      setBoard(board); //prevMessages => [...prevMessages, data.message])\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Squares, {\n      onClickButton: onClickButton,\n      val: board\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Board, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Board;\n\nvar _c;\n\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"sources":["/home/ec2-user/environment/react-starter/src/Board.js"],"names":["React","useState","useEffect","Squares","io","socket","board","setBoard","Array","fill","sateO","setStateO","Board","props","onClickButton","i","length","emit","data","on","console","log"],"mappings":";;;AAAA,OAAO,aAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,EAAP,MAAe,kBAAf;;AAEA,MAAMC,MAAM,GAAGD,EAAE,EAAjB;AACA,MAAM,CAACE,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,CAACO,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,CAAc,GAAd,CAAD,CAAD,CAAlC;AACA,MAAM,CAACC,KAAD,EAAQC,SAAR,IAAqBV,QAAQ,CAAC,CAAD,CAAnC;AAGA,OAAO,SAASW,KAAT,CAAeC,KAAf,EAAsB;AAAA;;AAC3B,WAASC,aAAT,CAAuBC,CAAvB,EAA0B;AACxB,QAAGT,KAAK,CAACU,MAAN,IAAgB,CAAhB,IAAqBV,KAAK,CAACS,CAAD,CAAL,IAAY,GAAZ,GAAgB,GAAxC,EAA4C;AAC1C;AACD,KAHuB,CAIxB;;;AACA,QAAGL,KAAK,IAAI,CAAZ,EAAc;AACZJ,MAAAA,KAAK,CAACS,CAAD,CAAL,GAAW,GAAX;AACAJ,MAAAA,SAAS,CAACD,KAAK,GAAC,CAAP,CAAT;AACAH,MAAAA,QAAQ,CAACD,KAAD,CAAR,CAHY,CAIZ;AACD,KALD,MAMI;AACFA,MAAAA,KAAK,CAACS,CAAD,CAAL,GAAW,GAAX,CADE,CAEF;;AACAJ,MAAAA,SAAS,CAAC,CAAD,CAAT;AACAJ,MAAAA,QAAQ,CAACD,KAAD,CAAR,CAJE,CAKF;AACD,KAjBuB,CAmBxB;;;AACAD,IAAAA,MAAM,CAACY,IAAP,CAAY,SAAZ,EAAuB;AAAEC,MAAAA,IAAI,EAAGZ;AAAT,KAAvB;AACD;;AAAA;AAEDJ,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,MAAM,CAACc,EAAP,CAAU,SAAV,EAAsBD,IAAD,IAAU;AAC7BE,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAgBH,IAAI,CAACZ,KAAjC;AACAc,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAF6B,CAG7B;;AACA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACM;;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAgBf,KAA5B;AACAC,MAAAA,QAAQ,CAACD,KAAD,CAAR,CAjB6B,CAkB7B;AACD,KAnBD;AAoBD,GArBQ,EAqBN,EArBM,CAAT;AAuBA,sBACE;AAAA,2BACE,QAAC,OAAD;AAAS,MAAA,aAAa,EAAEQ,aAAxB;AAAuC,MAAA,GAAG,EAAER;AAA5C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GApDeM,K;;KAAAA,K","sourcesContent":["import './Board.css';\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { Squares } from './square.js';\nimport io from 'socket.io-client';\n\nconst socket = io();\nconst [board, setBoard] = useState([Array(9).fill(\" \")]);\nconst [sateO, setStateO] = useState(1);\n\n\nexport function Board(props) {\n  function onClickButton(i) {\n    if(board.length == 9 || board[i] == 'X'|'O'){\n      return;\n    }\n    //const newboard = [...board]\n    if(sateO == 0){\n      board[i] = 'O';\n      setStateO(sateO+1);\n      setBoard(board)\n      //console.log(newboard);\n    }\n    else{\n      board[i] = 'X';\n      //const newboard = [...board]\n      setStateO(0);\n      setBoard(board)\n      //console.log(newboard);\n    }\n    \n    //socket.emit('clicked', { tile : i, value : newboard[i] });\n    socket.emit('clicked', { data : board});\n  };\n  \n  useEffect(() => {\n    socket.on('clicked', (data) => {\n      console.log(\"Old board: \" + data.board);\n      console.log('Board is updating ');\n      //console.log(\"tile: \" + data.tile);\n      /*\n      if(sateO == 0){\n        board[data.tile] = 'O';\n        setStateO(sateO+1);\n        console.log(\"Assigning: \" + newboard);\n      }\n      if(sateO == 1){\n        newboard[data.tile] = 'X';\n        setStateO(0);\n        console.log(\"Assigning: \" + newboard);\n      }*/\n      //setBoard(prevBoard => [...board]);\n      console.log(\"New borad: \" + board);\n      setBoard(board);\n      //prevMessages => [...prevMessages, data.message])\n    });\n  }, []);\n  \n  return (\n    <div>\n      <Squares onClickButton={onClickButton} val={board} />\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}