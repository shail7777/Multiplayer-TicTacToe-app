{"ast":null,"code":"var _jsxFileName = \"/home/ec2-user/environment/project2-sap258/src/Board.js\",\n    _s = $RefreshSig$();\n\nimport './Board.css';\nimport React from 'react';\nimport { useState, useEffect, useRef } from 'react';\nimport { Squares } from './square.js';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io();\nexport function Board(props) {\n  _s();\n\n  const [board, setBoard] = useState([\" \"]);\n  const [stateO, setStateO] = useState(0);\n  const [playerCount, setplayerCount] = useState(0);\n  const [player, setPlayer] = useState([]);\n  const [spectator, setSpectator] = useState([]);\n  const inputRef = useRef(null);\n\n  function assigneUser() {\n    if (inputRef != null) {\n      const inp = inputRef.current.value;\n      console.log(inp);\n\n      if (playerCount == 2) {\n        setSpectator(preSpectator => [...preSpectator, inp]);\n        console.log(\"Assigning to spectator: \" + spectator.value);\n      } else {\n        //setPlayer(prePlayers => [...prePlayers, inp]);\n        setPlayer(...player, inp);\n        console.log(\"Assigning to player: \" + player);\n        setplayerCount(prev => prev + 1);\n      }\n\n      socket.emit('assigneUser', {\n        player: player,\n        spectator: spectator\n      });\n    }\n  }\n\n  function calculateWinner(squares) {\n    const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n    for (let i = 0; i < lines.length; i++) {\n      const [a, b, c] = lines[i];\n\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n        return squares[a];\n      }\n    }\n\n    return null;\n  }\n\n  function onClickButton(i) {\n    //console.log(\"Before onclick function borad: \" + board);\n    //console.log(\"Before onclick function sateO: \" + stateO);\n    //console.log(\"board.length: \" + board.length);\n    //console.log(\"board[i]: \" + board[i]);\n    if (board[i] == 'X' || board[i] == 'O') {\n      return null;\n    }\n\n    if (stateO == 1) {\n      board[i] = 'O';\n      setStateO(prevStateO => prevStateO - 1);\n    }\n\n    if (stateO == 0) {\n      board[i] = 'X';\n      setStateO(prevStateO => prevStateO + 1);\n    }\n\n    const newboard = [...board];\n    setBoard(newboard);\n    /*if(calculateWinner(board)){\n      alert(\"You Won!!!\");\n      setBoard([]);\n    }*/\n\n    socket.emit('clicked', {\n      board: newboard,\n      val: newboard[i]\n    }); //console.log(\"After onclick function borad: \" + newboard);\n    //console.log(\"After onclick function sateO: \" + stateO);\n\n    return newboard;\n  }\n\n  ;\n  useEffect(() => {\n    socket.on('assigneUser', data => {\n      const newplayer = [...data.player];\n      const newspectator = [...data.spectator];\n      setPlayer(newplayer);\n      setSpectator(newspectator);\n      console.log(\"useEffect Spectator: \" + newspectator);\n      console.log(\"useEffect Players: \" + newplayer);\n    });\n    socket.on('clicked', data => {\n      //console.log(\"Before useEffect borad: \" + board);\n      //console.log(\"Before useEffect sateO: \" + stateO);\n      const newboard = [...data.board];\n\n      if (data.val == 'X') {\n        setStateO(1);\n      } else {\n        setStateO(0);\n      }\n\n      setBoard(newboard);\n      /*if(calculateWinner(board)){\n        alert(\"You lost!!!\");\n        setBoard([]);\n        return;\n      }*/\n      //console.log(\"After useEffect borad: \" + newboard);\n      //console.log(\"After useEffect sateO: \" + stateO);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Enter your username: \", /*#__PURE__*/_jsxDEV(\"input\", {\n      ref: inputRef,\n      type: \"text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 28\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: assigneUser,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Squares, {\n      onClickButton: onClickButton,\n      val: board\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Board, \"Ezujvr1QBvrG4U2lHTEsb/1tyDo=\");\n\n_c = Board;\n\nvar _c;\n\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"sources":["/home/ec2-user/environment/project2-sap258/src/Board.js"],"names":["React","useState","useEffect","useRef","Squares","io","socket","Board","props","board","setBoard","stateO","setStateO","playerCount","setplayerCount","player","setPlayer","spectator","setSpectator","inputRef","assigneUser","inp","current","value","console","log","preSpectator","prev","emit","calculateWinner","squares","lines","i","length","a","b","c","onClickButton","prevStateO","newboard","val","on","data","newplayer","newspectator"],"mappings":"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","sourcesContent":["import './Board.css';\nimport React from 'react';\nimport { useState, useEffect, useRef } from 'react';\nimport { Squares } from './square.js';\nimport io from 'socket.io-client';\n\nconst socket = io();\n\nexport function Board(props) {\n  \n  const [board, setBoard] = useState([\" \"]);\n  const [stateO, setStateO] = useState(0);\n  const [playerCount, setplayerCount] = useState(0);\n  const [player, setPlayer] = useState([]);\n  const [spectator, setSpectator] = useState([]);\n  const inputRef = useRef(null);\n\n  function assigneUser(){\n    if(inputRef != null){\n    \n      const inp = inputRef.current.value;\n      console.log(inp);\n      \n      if(playerCount == 2){\n        setSpectator(preSpectator => [...preSpectator, inp]);\n        console.log(\"Assigning to spectator: \" + spectator.value);\n      }\n      \n      else{\n        //setPlayer(prePlayers => [...prePlayers, inp]);\n        setPlayer(...player, inp);\n        console.log(\"Assigning to player: \" + player);\n        setplayerCount((prev) => prev + 1);\n      }\n      \n      socket.emit('assigneUser', {player:player, spectator:spectator});\n    }\n  }\n\n\n  function calculateWinner(squares) {\n    const lines = [\n      [0, 1, 2],\n      [3, 4, 5],\n      [6, 7, 8],\n      [0, 3, 6],\n      [1, 4, 7],\n      [2, 5, 8],\n      [0, 4, 8],\n      [2, 4, 6],\n    ];\n    for (let i = 0; i < lines.length; i++) {\n      const [a, b, c] = lines[i];\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n        return squares[a];\n      }\n    }\n  return null;\n  }\n\n\n  function onClickButton(i) {\n    //console.log(\"Before onclick function borad: \" + board);\n    //console.log(\"Before onclick function sateO: \" + stateO);\n    //console.log(\"board.length: \" + board.length);\n    //console.log(\"board[i]: \" + board[i]);\n    if(board[i] == 'X' || board[i] == 'O'){\n      return null;\n    }\n    \n    if(stateO == 1){\n      board[i] = 'O';\n      setStateO((prevStateO) => prevStateO - 1);\n    }\n    \n    if(stateO == 0){\n      board[i] = 'X';\n      setStateO((prevStateO) => prevStateO + 1);\n    }\n    \n    const newboard = [...board];\n    setBoard(newboard);\n    \n    /*if(calculateWinner(board)){\n      alert(\"You Won!!!\");\n      setBoard([]);\n    }*/\n    \n    socket.emit('clicked', {board: newboard, val: newboard[i]});\n    //console.log(\"After onclick function borad: \" + newboard);\n    //console.log(\"After onclick function sateO: \" + stateO);\n    \n    return newboard;\n  };\n  \n  useEffect(() => {\n    \n    socket.on('assigneUser', (data) => {\n      const newplayer = [...data.player];\n      const newspectator = [...data.spectator];\n      \n      setPlayer(newplayer);\n      setSpectator(newspectator);\n      console.log(\"useEffect Spectator: \" + newspectator);\n      console.log(\"useEffect Players: \" + newplayer);\n    })\n    \n    socket.on('clicked', (data) => {\n      //console.log(\"Before useEffect borad: \" + board);\n      //console.log(\"Before useEffect sateO: \" + stateO);\n    \n      const newboard = [...data.board];\n\n      if(data.val == 'X'){\n        setStateO(1);\n      }\n      else{\n        setStateO(0);\n      }\n      \n      setBoard(newboard);\n      \n      /*if(calculateWinner(board)){\n        alert(\"You lost!!!\");\n        setBoard([]);\n        return;\n      }*/\n      \n      //console.log(\"After useEffect borad: \" + newboard);\n      //console.log(\"After useEffect sateO: \" + stateO);\n    });\n    \n  }, []);\n  \n  return (\n    <div>\n      Enter your username: <input ref={inputRef} type='text' />\n      <button onClick={assigneUser}>Submit</button>\n      <Squares onClickButton={onClickButton} val={board} />\n    </div>\n    \n  );\n}"]},"metadata":{},"sourceType":"module"}