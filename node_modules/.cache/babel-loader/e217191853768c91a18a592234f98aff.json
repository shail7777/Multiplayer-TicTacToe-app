{"ast":null,"code":"var _jsxFileName = \"/home/ec2-user/environment/react-starter/src/Board.js\",\n    _s = $RefreshSig$();\n\nimport './Board.css';\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { Squares } from './square.js';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io();\nexport function Board(props) {\n  _s();\n\n  const [board, setBoard] = useState([Array(9).fill(\" \")]);\n  const [sateO, setStateO] = useState(1);\n\n  function onClickButton(i) {\n    if (board.length == 9 || board[i] == 'X' | 'O') {\n      return;\n    }\n\n    const newboard = [...board];\n\n    if (sateO == 0) {\n      newboard[i] = 'O';\n      setStateO(sateO + 1);\n      setBoard(newboard); //console.log(newboard);\n    } else {\n      newboard[i] = 'X'; //const newboard = [...board]\n\n      setStateO(0);\n      setBoard(newboard); //console.log(newboard);\n    } //socket.emit('clicked', { tile : i, value : newboard[i] });\n\n\n    socket.emit('clicked', {\n      tile: i\n    });\n  }\n\n  ;\n  useEffect(() => {\n    socket.on('clicked', data => {\n      console.log(\"Old board: \" + board);\n      console.log('Board is updating ');\n      console.log(\"tile: \" + data.tile);\n\n      if (sateO == 0) {\n        board[data.tile] = 'O';\n        setStateO(sateO + 1);\n      } else {\n        board[data.tile] = 'X';\n        setStateO(0);\n      }\n\n      console.log(\"New borad: \" + board);\n      setBoard(board => [...board]); //prevMessages => [...prevMessages, data.message])\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Squares, {\n      onClickButton: onClickButton,\n      val: board\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Board, \"Teb7emONrNhwiXUNQpo2NmwJalg=\");\n\n_c = Board;\n\nvar _c;\n\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"sources":["/home/ec2-user/environment/react-starter/src/Board.js"],"names":["React","useState","useEffect","Squares","io","socket","Board","props","board","setBoard","Array","fill","sateO","setStateO","onClickButton","i","length","newboard","emit","tile","on","data","console","log"],"mappings":";;;AAAA,OAAO,aAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,EAAP,MAAe,kBAAf;;AAEA,MAAMC,MAAM,GAAGD,EAAE,EAAjB;AAEA,OAAO,SAASE,KAAT,CAAeC,KAAf,EAAsB;AAAA;;AAE3B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,CAACS,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,CAAc,GAAd,CAAD,CAAD,CAAlC;AACA,QAAM,CAACC,KAAD,EAAQC,SAAR,IAAqBZ,QAAQ,CAAC,CAAD,CAAnC;;AAEA,WAASa,aAAT,CAAuBC,CAAvB,EAA0B;AACxB,QAAGP,KAAK,CAACQ,MAAN,IAAgB,CAAhB,IAAqBR,KAAK,CAACO,CAAD,CAAL,IAAY,GAAZ,GAAgB,GAAxC,EAA4C;AAC1C;AACD;;AACD,UAAME,QAAQ,GAAG,CAAC,GAAGT,KAAJ,CAAjB;;AACA,QAAGI,KAAK,IAAI,CAAZ,EAAc;AACZK,MAAAA,QAAQ,CAACF,CAAD,CAAR,GAAc,GAAd;AACAF,MAAAA,SAAS,CAACD,KAAK,GAAC,CAAP,CAAT;AACAH,MAAAA,QAAQ,CAACQ,QAAD,CAAR,CAHY,CAIZ;AACD,KALD,MAMI;AACFA,MAAAA,QAAQ,CAACF,CAAD,CAAR,GAAc,GAAd,CADE,CAEF;;AACAF,MAAAA,SAAS,CAAC,CAAD,CAAT;AACAJ,MAAAA,QAAQ,CAACQ,QAAD,CAAR,CAJE,CAKF;AACD,KAjBuB,CAmBxB;;;AACAZ,IAAAA,MAAM,CAACa,IAAP,CAAY,SAAZ,EAAuB;AAAEC,MAAAA,IAAI,EAAGJ;AAAT,KAAvB;AACD;;AAAA;AAEDb,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,MAAM,CAACe,EAAP,CAAU,SAAV,EAAsBC,IAAD,IAAU;AAC7BC,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAgBf,KAA5B;AACAc,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAWF,IAAI,CAACF,IAA5B;;AAEA,UAAGP,KAAK,IAAI,CAAZ,EAAc;AACZJ,QAAAA,KAAK,CAACa,IAAI,CAACF,IAAN,CAAL,GAAmB,GAAnB;AACAN,QAAAA,SAAS,CAACD,KAAK,GAAC,CAAP,CAAT;AACD,OAHD,MAII;AACFJ,QAAAA,KAAK,CAACa,IAAI,CAACF,IAAN,CAAL,GAAmB,GAAnB;AACAN,QAAAA,SAAS,CAAC,CAAD,CAAT;AACD;;AACDS,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAgBf,KAA5B;AACAC,MAAAA,QAAQ,CAACD,KAAK,IAAI,CAAC,GAAGA,KAAJ,CAAV,CAAR,CAd6B,CAe7B;AACD,KAhBD;AAiBD,GAlBQ,EAkBN,EAlBM,CAAT;AAoBA,sBACE;AAAA,2BACE,QAAC,OAAD;AAAS,MAAA,aAAa,EAAEM,aAAxB;AAAuC,MAAA,GAAG,EAAEN;AAA5C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GArDeF,K;;KAAAA,K","sourcesContent":["import './Board.css';\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { Squares } from './square.js';\nimport io from 'socket.io-client';\n\nconst socket = io();\n\nexport function Board(props) {\n  \n  const [board, setBoard] = useState([Array(9).fill(\" \")]);\n  const [sateO, setStateO] = useState(1);\n\n  function onClickButton(i) {\n    if(board.length == 9 || board[i] == 'X'|'O'){\n      return;\n    }\n    const newboard = [...board]\n    if(sateO == 0){\n      newboard[i] = 'O';\n      setStateO(sateO+1);\n      setBoard(newboard)\n      //console.log(newboard);\n    }\n    else{\n      newboard[i] = 'X';\n      //const newboard = [...board]\n      setStateO(0);\n      setBoard(newboard)\n      //console.log(newboard);\n    }\n    \n    //socket.emit('clicked', { tile : i, value : newboard[i] });\n    socket.emit('clicked', { tile : i});\n  };\n  \n  useEffect(() => {\n    socket.on('clicked', (data) => {\n      console.log(\"Old board: \" + board);\n      console.log('Board is updating ');\n      console.log(\"tile: \" + data.tile);\n      \n      if(sateO == 0){\n        board[data.tile] = 'O';\n        setStateO(sateO+1);\n      }\n      else{\n        board[data.tile] = 'X';\n        setStateO(0);\n      }\n      console.log(\"New borad: \" + board);\n      setBoard(board => [...board]);\n      //prevMessages => [...prevMessages, data.message])\n    });\n  }, []);\n  \n  return (\n    <div>\n      <Squares onClickButton={onClickButton} val={board} />\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}