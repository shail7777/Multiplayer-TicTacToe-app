{"ast":null,"code":"var _jsxFileName = \"/home/ec2-user/environment/project2-sap258/src/Board.js\",\n    _s = $RefreshSig$();\n\nimport './Board.css';\nimport React from 'react';\nimport { useState, useEffect, useRef } from 'react';\nimport { Squares } from './square.js';\nimport { ListItem } from './ListItem.js';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io();\nvar currentUser;\nexport function Board(props) {\n  _s();\n\n  const [board, setBoard] = useState([\" \"]);\n  const [turn, setTurn] = useState(\"\");\n  const [stateO, setStateO] = useState(0);\n  const [player, setPlayer] = useState([]);\n  const [spectator, setSpectator] = useState([]);\n  const inputRef = useRef(null);\n\n  function assigneUser() {\n    if (inputRef != null) {\n      const inp = inputRef.current.value;\n      currentUser = inp;\n      console.log(\"user input: \" + inp);\n      socket.emit('assigne', {\n        val: inp\n      });\n    }\n  }\n\n  function calculateWinner(squares) {\n    const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n    for (let i = 0; i < lines.length; i++) {\n      const [a, b, c] = lines[i];\n\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n        return squares[a];\n      }\n    }\n\n    return null;\n  }\n  /*function check(){\n    console.log(\"current: \" + currentUser);\n    var n = player.includes(currentUser);\n  \n    if(n == true){\n      return true;\n    }\n    else{\n      return false;\n    }\n  }\n  \n  function turns(){\n    var x;\n    console.log('Curruser: ' + currentUser);\n    socket.emit('turns', {currentUser});\n    socket.on('turns_check', (turn) => {\n        x = turn;\n        console.log(\"Turn: \" + turn);\n      })\n    return x;\n  }\n  */\n\n\n  function onClickButton(i) {\n    console.log(\"Current turn: \" + turn);\n\n    if (turn != currentUser || currentUser == null) {\n      return;\n    }\n\n    if (board[i] == 'X' || board[i] == 'O') {\n      return;\n    }\n\n    if (stateO == 1) {\n      board[i] = 'O';\n      setStateO(prevStateO => prevStateO - 1);\n    }\n\n    if (stateO == 0) {\n      board[i] = 'X';\n      setStateO(prevStateO => prevStateO + 1);\n    }\n\n    const newboard = [...board];\n    setBoard(newboard);\n    /*if(calculateWinner(board)){\n      alert(\"You Won!!!\");\n      setBoard([]);\n    }*/\n\n    if (currentUser == player[0]) {\n      setTurn(player[1]);\n      socket.emit('turns_update', {\n        user: player[1]\n      });\n    }\n\n    if (currentUser == player[1]) {\n      setTurn(player[0]);\n      socket.emit('turns_update', {\n        user: player[0]\n      });\n    }\n\n    socket.emit('clicked', {\n      board: newboard,\n      val: newboard[i],\n      turn: turn\n    });\n    return newboard;\n  }\n\n  ;\n  useEffect(() => {\n    socket.on('assigne_players', server_players => {\n      const pl = [...server_players];\n      setPlayer(pl);\n    });\n    socket.on('assigne_spectator', server_spectator => {\n      const sp = [...server_spectator];\n      setSpectator(sp);\n    });\n    socket.on('turns', data => {\n      setTurn(data);\n      console.log(\"First turn: \" + turn);\n    });\n    socket.on('turns_update', data => {\n      setTurn(data.user);\n      console.log(\"Turn updaed to: \" + data.user);\n    });\n    socket.on('clicked', data => {\n      //console.log(\"Before useEffect borad: \" + board);\n      //console.log(\"Before useEffect sateO: \" + stateO);\n      setTurn(data.turn);\n      const newboard = [...data.board];\n\n      if (data.val == 'X') {\n        setStateO(1);\n      } else {\n        setStateO(0);\n      }\n\n      setBoard(newboard); //console.log(\"After useEffect borad: \" + newboard);\n      //console.log(\"After useEffect sateO: \" + stateO);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Enter your username: \", /*#__PURE__*/_jsxDEV(\"input\", {\n      ref: inputRef,\n      type: \"text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 28\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: assigneUser,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"right\",\n      children: [\"Players:\", /*#__PURE__*/_jsxDEV(\"ol\", {\n        children: player.map(users => /*#__PURE__*/_jsxDEV(ListItem, {\n          name: users\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 32\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"right1\",\n      children: [\"Spectator:\", /*#__PURE__*/_jsxDEV(\"ol\", {\n        children: spectator.map(users => /*#__PURE__*/_jsxDEV(ListItem, {\n          name: users\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 35\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Turn: \", turn]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Squares, {\n      onClickButton: onClickButton,\n      val: board\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Board, \"hMW1QrU4e3Dv3athD4Qoi3UyS8c=\");\n\n_c = Board;\n\nvar _c;\n\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"sources":["/home/ec2-user/environment/project2-sap258/src/Board.js"],"names":["React","useState","useEffect","useRef","Squares","ListItem","io","socket","currentUser","Board","props","board","setBoard","turn","setTurn","stateO","setStateO","player","setPlayer","spectator","setSpectator","inputRef","assigneUser","inp","current","value","console","log","emit","val","calculateWinner","squares","lines","i","length","a","b","c","onClickButton","prevStateO","newboard","user","on","server_players","pl","server_spectator","sp","data","map","users"],"mappings":"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","sourcesContent":["import './Board.css';\nimport React from 'react';\nimport { useState, useEffect, useRef } from 'react';\nimport { Squares } from './square.js';\nimport { ListItem } from './ListItem.js';\nimport io from 'socket.io-client';\n\nconst socket = io();\nvar currentUser;\nexport function Board(props) {\n  \n  const [board, setBoard] = useState([\" \"]);\n  const [turn, setTurn] = useState(\"\");\n  const [stateO, setStateO] = useState(0);\n  const [player, setPlayer] = useState([]);\n  const [spectator, setSpectator] = useState([]);\n  const inputRef = useRef(null);\n\n  function assigneUser(){\n    if(inputRef != null){\n      const inp = inputRef.current.value;\n      currentUser = inp;\n      console.log(\"user input: \" + inp);\n      \n      socket.emit('assigne', {val: inp});\n    }\n  }\n\n\n  function calculateWinner(squares) {\n    const lines = [\n      [0, 1, 2],\n      [3, 4, 5],\n      [6, 7, 8],\n      [0, 3, 6],\n      [1, 4, 7],\n      [2, 5, 8],\n      [0, 4, 8],\n      [2, 4, 6],\n    ];\n    for (let i = 0; i < lines.length; i++) {\n      const [a, b, c] = lines[i];\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n        return squares[a];\n      }\n    }\n  return null;\n  }\n\n/*function check(){\n  console.log(\"current: \" + currentUser);\n  var n = player.includes(currentUser);\n\n  if(n == true){\n    return true;\n  }\n  else{\n    return false;\n  }\n}\n\nfunction turns(){\n  var x;\n  console.log('Curruser: ' + currentUser);\n  socket.emit('turns', {currentUser});\n  socket.on('turns_check', (turn) => {\n      x = turn;\n      console.log(\"Turn: \" + turn);\n    })\n  return x;\n}\n*/\n\n  function onClickButton(i) {\n    console.log(\"Current turn: \" + turn);\n    \n    if(turn != currentUser || currentUser == null){\n      return;\n    }\n    \n    if(board[i] == 'X' || board[i] == 'O'){\n      return;\n    }\n    \n    if(stateO == 1){\n      board[i] = 'O';\n      setStateO((prevStateO) => prevStateO - 1);\n    }\n    \n    if(stateO == 0){\n      board[i] = 'X';\n      setStateO((prevStateO) => prevStateO + 1);\n    }\n    \n    const newboard = [...board];\n    setBoard(newboard);\n    \n    /*if(calculateWinner(board)){\n      alert(\"You Won!!!\");\n      setBoard([]);\n    }*/\n    \n    if(currentUser == player[0]){\n      setTurn(player[1]);\n      socket.emit('turns_update', {user:player[1]});\n    }\n    if(currentUser == player[1]){\n      setTurn(player[0]);\n      socket.emit('turns_update', {user:player[0]});\n    }\n    \n    socket.emit('clicked', {board: newboard, val: newboard[i], turn:turn});\n    return newboard;\n  };\n  \n  useEffect(() => {\n    \n    socket.on('assigne_players', (server_players) => {\n      const pl = [...server_players];\n      setPlayer(pl);\n    })\n    \n    socket.on('assigne_spectator', (server_spectator) => {\n      const sp = [...server_spectator];\n      setSpectator(sp);\n    })\n    \n    socket.on('turns', (data) => {\n      setTurn(data);\n      console.log(\"First turn: \" + turn);\n    })\n    \n    socket.on('turns_update', (data) => {\n      setTurn(data.user);\n      console.log(\"Turn updaed to: \" + data.user);\n    })\n    \n    socket.on('clicked', (data) => {\n      //console.log(\"Before useEffect borad: \" + board);\n      //console.log(\"Before useEffect sateO: \" + stateO);\n      setTurn(data.turn);\n      \n      const newboard = [...data.board];\n      if(data.val == 'X'){\n        setStateO(1);\n      }\n      else{\n        setStateO(0);\n      }\n      setBoard(newboard);\n      \n      //console.log(\"After useEffect borad: \" + newboard);\n      //console.log(\"After useEffect sateO: \" + stateO);\n    });\n    \n  }, []);\n  \n  return (\n    <div>\n      Enter your username: <input ref={inputRef} type='text' />\n      <button onClick={assigneUser}>Submit</button>\n      \n      <div class=\"right\">\n      Players:\n        <ol>\n          {player.map(users => <ListItem name={users} />)}\n        </ol>\n      </div>\n      \n      <div class=\"right1\">\n      Spectator:\n        <ol>\n          {spectator.map(users => <ListItem name={users} />)}\n        </ol>\n      </div>\n      <p>Turn: {turn}</p>\n      <Squares onClickButton={onClickButton} val={board} />\n    </div>\n    \n  );\n}"]},"metadata":{},"sourceType":"module"}