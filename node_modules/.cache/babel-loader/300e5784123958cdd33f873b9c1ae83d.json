{"ast":null,"code":"var _jsxFileName = \"/home/ec2-user/environment/react-starter/src/Board.js\",\n    _s = $RefreshSig$();\n\nimport './Board.css';\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { Squares } from './square.js';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io();\nexport function Board(props) {\n  _s();\n\n  const [board, setBoard] = useState([Array(9).fill(null)]);\n  const [sateO, setStateO] = useState(1);\n\n  function onClickButton(i) {\n    console.log(\"After onclick function borad: \" + board);\n\n    if (board.length == 9 || board[i] == 'X' | 'O') {\n      return;\n    }\n\n    if (sateO == 0) {\n      board[i] = 'O';\n      setStateO(prevStateO => prevStateO + 1);\n      setBoard(prevBoard => [...prevBoard, ...board]);\n      socket.emit('clicked', {\n        index: i,\n        val: board[i]\n      });\n    }\n\n    if (sateO == 1) {\n      board[i] = 'X';\n      setStateO(0);\n      setBoard(prevBoard => [...prevBoard, ...board]);\n      socket.emit('clicked', {\n        index: i,\n        val: board[i]\n      });\n    }\n\n    console.log(\"After onclick function borad: \" + board);\n  }\n\n  ;\n  useEffect(() => {\n    socket.on('clicked', data => {\n      const newboard = data.board.slice();\n      board.map((item, index) => index === data.index ? data.val : item);\n      console.log(\"After useEffect borad: \" + newboard);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Squares, {\n      onClickButton: onClickButton,\n      val: board\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Board, \"hzGo/JJhMa20v+lBJURdX6yzAuU=\");\n\n_c = Board;\n\nvar _c;\n\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"sources":["/home/ec2-user/environment/react-starter/src/Board.js"],"names":["React","useState","useEffect","Squares","io","socket","Board","props","board","setBoard","Array","fill","sateO","setStateO","onClickButton","i","console","log","length","prevStateO","prevBoard","emit","index","val","on","data","newboard","slice","map","item"],"mappings":";;;AAAA,OAAO,aAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,EAAP,MAAe,kBAAf;;AAEA,MAAMC,MAAM,GAAGD,EAAE,EAAjB;AAEA,OAAO,SAASE,KAAT,CAAeC,KAAf,EAAsB;AAAA;;AAE3B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,CAACS,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,CAAc,IAAd,CAAD,CAAD,CAAlC;AACA,QAAM,CAACC,KAAD,EAAQC,SAAR,IAAqBZ,QAAQ,CAAC,CAAD,CAAnC;;AAEA,WAASa,aAAT,CAAuBC,CAAvB,EAA0B;AACxBC,IAAAA,OAAO,CAACC,GAAR,CAAY,mCAAmCT,KAA/C;;AACA,QAAGA,KAAK,CAACU,MAAN,IAAgB,CAAhB,IAAqBV,KAAK,CAACO,CAAD,CAAL,IAAY,GAAZ,GAAgB,GAAxC,EAA4C;AAC1C;AACD;;AACD,QAAGH,KAAK,IAAI,CAAZ,EAAc;AACZJ,MAAAA,KAAK,CAACO,CAAD,CAAL,GAAW,GAAX;AACAF,MAAAA,SAAS,CAAEM,UAAD,IAAgBA,UAAU,GAAG,CAA9B,CAAT;AACAV,MAAAA,QAAQ,CAACW,SAAS,IAAK,CAAC,GAAGA,SAAJ,EAAe,GAAGZ,KAAlB,CAAf,CAAR;AACAH,MAAAA,MAAM,CAACgB,IAAP,CAAY,SAAZ,EAAuB;AAACC,QAAAA,KAAK,EAAGP,CAAT;AAAYQ,QAAAA,GAAG,EAAGf,KAAK,CAACO,CAAD;AAAvB,OAAvB;AACD;;AACD,QAAGH,KAAK,IAAI,CAAZ,EAAc;AACZJ,MAAAA,KAAK,CAACO,CAAD,CAAL,GAAW,GAAX;AACAF,MAAAA,SAAS,CAAC,CAAD,CAAT;AACAJ,MAAAA,QAAQ,CAACW,SAAS,IAAK,CAAC,GAAGA,SAAJ,EAAe,GAAGZ,KAAlB,CAAf,CAAR;AACAH,MAAAA,MAAM,CAACgB,IAAP,CAAY,SAAZ,EAAuB;AAACC,QAAAA,KAAK,EAAGP,CAAT;AAAYQ,QAAAA,GAAG,EAAGf,KAAK,CAACO,CAAD;AAAvB,OAAvB;AACD;;AAEDC,IAAAA,OAAO,CAACC,GAAR,CAAY,mCAAmCT,KAA/C;AAED;;AAAA;AAEDN,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,MAAM,CAACmB,EAAP,CAAU,SAAV,EAAsBC,IAAD,IAAU;AAC7B,YAAMC,QAAQ,GAAGD,IAAI,CAACjB,KAAL,CAAWmB,KAAX,EAAjB;AACAnB,MAAAA,KAAK,CAACoB,GAAN,CAAU,CAACC,IAAD,EAAOP,KAAP,KAAiBA,KAAK,KAAKG,IAAI,CAACH,KAAf,GAAuBG,IAAI,CAACF,GAA5B,GAAkCM,IAA7D;AACAb,MAAAA,OAAO,CAACC,GAAR,CAAY,4BAA4BS,QAAxC;AACD,KAJD;AAKD,GANQ,EAMN,EANM,CAAT;AAQA,sBACE;AAAA,2BACE,QAAC,OAAD;AAAS,MAAA,aAAa,EAAEZ,aAAxB;AAAuC,MAAA,GAAG,EAAEN;AAA5C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GAxCeF,K;;KAAAA,K","sourcesContent":["import './Board.css';\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { Squares } from './square.js';\nimport io from 'socket.io-client';\n\nconst socket = io();\n\nexport function Board(props) {\n  \n  const [board, setBoard] = useState([Array(9).fill(null)]);\n  const [sateO, setStateO] = useState(1);\n\n  function onClickButton(i) {\n    console.log(\"After onclick function borad: \" + board);\n    if(board.length == 9 || board[i] == 'X'|'O'){\n      return;\n    }\n    if(sateO == 0){\n      board[i] = 'O';\n      setStateO((prevStateO) => prevStateO + 1);\n      setBoard(prevBoard => ([...prevBoard, ...board]));\n      socket.emit('clicked', {index : i, val : board[i]});\n    }\n    if(sateO == 1){\n      board[i] = 'X';\n      setStateO(0);\n      setBoard(prevBoard => ([...prevBoard, ...board]));\n      socket.emit('clicked', {index : i, val : board[i]});\n    }\n    \n    console.log(\"After onclick function borad: \" + board);\n    \n  };\n  \n  useEffect(() => {\n    socket.on('clicked', (data) => {\n      const newboard = data.board.slice();\n      board.map((item, index) => index === data.index ? data.val : item);\n      console.log(\"After useEffect borad: \" + newboard);\n    });\n  }, []);\n  \n  return (\n    <div>\n      <Squares onClickButton={onClickButton} val={board} />\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}