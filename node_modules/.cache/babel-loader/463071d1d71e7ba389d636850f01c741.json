{"ast":null,"code":"var _jsxFileName = \"/home/ec2-user/environment/project2-sap258/src/Board.js\",\n    _s = $RefreshSig$();\n\nimport './Board.css';\nimport React from 'react';\nimport { useState, useEffect, useRef } from 'react';\nimport { Squares } from './square.js';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io();\nexport function Board(props) {\n  _s();\n\n  const [board, setBoard] = useState([]);\n  const [stateO, setStateO] = useState(0);\n  const [player, setPlayer] = useState([]);\n  const [spectator, setSpectator] = useState([]);\n  const inputRef = useRef(null);\n\n  function assigneUser() {\n    if (inputRef != null) {\n      if (player.length == 2) {\n        setSpectator(inputRef.current.value);\n        console.log(\"Spectator: \" + spectator);\n      } else {\n        setPlayer(inputRef.current.value);\n        console.log(\"Players: \" + player);\n      }\n    }\n  }\n\n  function calculateWinner(squares) {\n    const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n    for (let i = 0; i < lines.length; i++) {\n      const [a, b, c] = lines[i];\n\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n        return squares[a];\n      }\n    }\n\n    return null;\n  }\n\n  function onClickButton(i) {\n    //console.log(\"Before onclick function borad: \" + board);\n    //console.log(\"Before onclick function sateO: \" + stateO);\n    //console.log(\"board.length: \" + board.length);\n    //console.log(\"board[i]: \" + board[i]);\n    if (board[i] == 'X' || board[i] == 'O') {\n      return null;\n    }\n\n    if (stateO == 1) {\n      board[i] = 'O';\n      setStateO(prevStateO => prevStateO - 1);\n    }\n\n    if (stateO == 0) {\n      board[i] = 'X';\n      setStateO(prevStateO => prevStateO + 1);\n    }\n\n    const newboard = [...board];\n    setBoard(newboard);\n    /*if(calculateWinner(board)){\n      alert(\"You Won!!!\");\n      setBoard([]);\n    }*/\n\n    socket.emit('clicked', {\n      board: newboard,\n      val: newboard[i],\n      player: player,\n      spectator: spectator\n    }); //console.log(\"After onclick function borad: \" + newboard);\n    //console.log(\"After onclick function sateO: \" + stateO);\n\n    return newboard;\n  }\n\n  ;\n  useEffect(() => {\n    socket.on('clicked', data => {\n      //console.log(\"Before useEffect borad: \" + board);\n      //console.log(\"Before useEffect sateO: \" + stateO);\n      const newboard = [...data.board];\n      const newplayer = [...data.player];\n      const newspectator = [...data.spectator];\n\n      if (data.val == 'X') {\n        setStateO(1);\n      } else {\n        setStateO(0);\n      }\n\n      setBoard(newboard);\n      setPlayer(newplayer);\n      setSpectator(newspectator);\n      console.log(\"Spectator: \" + spectator);\n      console.log(\"Players: \" + player);\n      /*if(calculateWinner(board)){\n        alert(\"You lost!!!\");\n        setBoard([]);\n        return;\n      }*/\n      //console.log(\"After useEffect borad: \" + newboard);\n      //console.log(\"After useEffect sateO: \" + stateO);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Enter your username: \", /*#__PURE__*/_jsxDEV(\"input\", {\n      ref: inputRef,\n      type: \"text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 28\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: assigneUser,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Squares, {\n      onClickButton: onClickButton,\n      val: board\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Board, \"KvccWDtnbdnW+dur2zjwkZoo46Q=\");\n\n_c = Board;\n\nvar _c;\n\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"sources":["/home/ec2-user/environment/project2-sap258/src/Board.js"],"names":["React","useState","useEffect","useRef","Squares","io","socket","Board","props","board","setBoard","stateO","setStateO","player","setPlayer","spectator","setSpectator","inputRef","assigneUser","length","current","value","console","log","calculateWinner","squares","lines","i","a","b","c","onClickButton","prevStateO","newboard","emit","val","on","data","newplayer","newspectator"],"mappings":"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","sourcesContent":["import './Board.css';\nimport React from 'react';\nimport { useState, useEffect, useRef } from 'react';\nimport { Squares } from './square.js';\nimport io from 'socket.io-client';\n\nconst socket = io();\n\nexport function Board(props) {\n  \n  const [board, setBoard] = useState([]);\n  const [stateO, setStateO] = useState(0);\n  const [player, setPlayer] = useState([]);\n  const [spectator, setSpectator] = useState([]);\n  const inputRef = useRef(null);\n\n  function assigneUser(){\n    if(inputRef != null){\n      if(player.length == 2){\n        setSpectator(inputRef.current.value);\n        console.log(\"Spectator: \" + spectator);\n      }\n      else{\n        setPlayer(inputRef.current.value);\n        console.log(\"Players: \" + player);\n      }\n    }\n  }\n\n\n  function calculateWinner(squares) {\n    const lines = [\n      [0, 1, 2],\n      [3, 4, 5],\n      [6, 7, 8],\n      [0, 3, 6],\n      [1, 4, 7],\n      [2, 5, 8],\n      [0, 4, 8],\n      [2, 4, 6],\n    ];\n    for (let i = 0; i < lines.length; i++) {\n      const [a, b, c] = lines[i];\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n        return squares[a];\n      }\n    }\n  return null;\n  }\n\n\n  function onClickButton(i) {\n    //console.log(\"Before onclick function borad: \" + board);\n    //console.log(\"Before onclick function sateO: \" + stateO);\n    //console.log(\"board.length: \" + board.length);\n    //console.log(\"board[i]: \" + board[i]);\n    if(board[i] == 'X' || board[i] == 'O'){\n      return null;\n    }\n    \n    if(stateO == 1){\n      board[i] = 'O';\n      setStateO((prevStateO) => prevStateO - 1);\n    }\n    \n    if(stateO == 0){\n      board[i] = 'X';\n      setStateO((prevStateO) => prevStateO + 1);\n    }\n    \n    const newboard = [...board];\n    setBoard(newboard);\n    \n    /*if(calculateWinner(board)){\n      alert(\"You Won!!!\");\n      setBoard([]);\n    }*/\n    \n    socket.emit('clicked', {board: newboard, val: newboard[i], player:player, spectator:spectator});\n    //console.log(\"After onclick function borad: \" + newboard);\n    //console.log(\"After onclick function sateO: \" + stateO);\n    \n    return newboard;\n  };\n  \n  useEffect(() => {\n    socket.on('clicked', (data) => {\n      //console.log(\"Before useEffect borad: \" + board);\n      //console.log(\"Before useEffect sateO: \" + stateO);\n    \n      const newboard = [...data.board];\n      const newplayer = [...data.player];\n      const newspectator = [...data.spectator];\n      if(data.val == 'X'){\n        setStateO(1);\n      }\n      else{\n        setStateO(0);\n      }\n      \n      setBoard(newboard);\n      setPlayer(newplayer);\n      setSpectator(newspectator);\n      \n      console.log(\"Spectator: \" + spectator);\n      console.log(\"Players: \" + player);\n      /*if(calculateWinner(board)){\n        alert(\"You lost!!!\");\n        setBoard([]);\n        return;\n      }*/\n      \n      //console.log(\"After useEffect borad: \" + newboard);\n      //console.log(\"After useEffect sateO: \" + stateO);\n    });\n  }, []);\n  \n  return (\n    <div>\n      Enter your username: <input ref={inputRef} type='text' />\n      <button onClick={assigneUser}>Submit</button>\n      <Squares onClickButton={onClickButton} val={board} />\n    </div>\n    \n  );\n}"]},"metadata":{},"sourceType":"module"}