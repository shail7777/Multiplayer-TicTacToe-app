{"ast":null,"code":"var _jsxFileName = \"/home/ec2-user/environment/project2-sap258/src/Board.js\",\n    _s = $RefreshSig$();\n\nimport './Board.css';\nimport React from 'react';\nimport { useState, useEffect, useRef } from 'react';\nimport { Squares } from './square.js';\nimport { ListItem } from './ListItem.js';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io();\nvar currentUser;\nexport function Board(props) {\n  _s();\n\n  const [board, setBoard] = useState([\" \"]);\n  const [turn, setTurn] = useState(\"\");\n  const [stateO, setStateO] = useState(0);\n  const [player, setPlayer] = useState([]);\n  const [spectator, setSpectator] = useState([]);\n  const inputRef = useRef(null);\n  const [showBoard, setShowBoard] = useState(false);\n  const [showWinner, setShowWinner] = useState(false);\n  const [winner, setWinner] = useState(\"\");\n  const [loser, setLoser] = useState(\"\");\n  const [showdraw, setDraw] = useState(false);\n  const [count, setCount] = useState(0);\n  const [leaderboard, setleaderboard] = useState([]);\n\n  function assigneUser() {\n    const inp = inputRef.current.value;\n\n    if (inp.length != 0 || currentUser == 0) {\n      if (!player.includes(inp) && !spectator.includes(inp)) {\n        setShowBoard(true);\n        const inp = inputRef.current.value;\n        currentUser = inp;\n        console.log(\"user input: \" + inp);\n        socket.emit('assigne', {\n          val: inp\n        });\n      } else {\n        setShowBoard(false);\n        console.log(\"already in list\");\n        return;\n      }\n    } else {\n      setShowBoard(false);\n      return;\n    }\n  }\n\n  function reset() {\n    if (player.includes(currentUser)) {\n      socket.emit('reset', {\n        user: currentUser\n      });\n      console.log('Reseting ' + currentUser);\n    }\n\n    return;\n  }\n\n  function calculateWinner(squares) {\n    const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n    for (let i = 0; i < lines.length; i++) {\n      const [a, b, c] = lines[i];\n\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n        return squares[a];\n      }\n    }\n\n    return null;\n  }\n\n  function onClickButton(i) {\n    //console.log(\"Current turn: \" + turn);\n    if (turn != currentUser || currentUser == null) {\n      return;\n    }\n\n    if (board[i] == 'X' || board[i] == 'O') {\n      return;\n    }\n\n    if (stateO == 1) {\n      board[i] = 'O';\n      setStateO(prevStateO => prevStateO - 1);\n    }\n\n    if (stateO == 0) {\n      board[i] = 'X';\n      setStateO(prevStateO => prevStateO + 1);\n    }\n\n    const newboard = [...board];\n    setBoard(newboard);\n\n    if (calculateWinner(board)) {\n      socket.emit('clicked', {\n        board: newboard,\n        val: newboard[i],\n        count: num\n      });\n\n      if (currentUser == player[0]) {\n        socket.emit('winner', {\n          winner: player[0],\n          loser: player[1]\n        });\n      }\n\n      if (currentUser == player[1]) {\n        socket.emit('winner', {\n          winner: player[1],\n          loser: player[0]\n        });\n      }\n\n      return;\n    }\n\n    if (currentUser == player[0] && player[1] != null) {\n      socket.emit('turns_update', {\n        user: player[1]\n      });\n    } else {\n      socket.emit('turns_update', {\n        user: player[0]\n      });\n    }\n\n    var num = count + 1;\n    setCount(num);\n    console.log(num);\n\n    if (num == 9) {\n      console.log(\"its a draw\");\n      setDraw(true);\n      socket.emit('draw', {\n        draw: showdraw\n      });\n    }\n\n    socket.emit('clicked', {\n      board: newboard,\n      val: newboard[i],\n      count: num\n    });\n    return newboard;\n  }\n\n  ;\n  useEffect(() => {\n    socket.on('assigne_players', server_players => {\n      const pl = [...server_players];\n      setPlayer(pl);\n    });\n    socket.on('assigne_spectator', server_spectator => {\n      const sp = [...server_spectator];\n      setSpectator(sp);\n    });\n    socket.on('first_turns', data => {\n      setTurn(data);\n      console.log(\"First turn: \" + data);\n    });\n    socket.on('turns_update', data => {\n      var x = data.user;\n      setTurn(x);\n      console.log(\"Turn updaed to: \" + x);\n      console.log(\"after update turn: \" + turn);\n    });\n    socket.on('winner', data => {\n      var win = data.winner;\n      var los = data.loser;\n      setWinner(win);\n      setLoser(los);\n      setShowWinner(true);\n    });\n    socket.on('draw', data => {\n      setDraw(true);\n    });\n    socket.on('reset', data => {\n      console.log(\"Reseting the game now\");\n      setBoard([\"\"]);\n      setDraw(false);\n      setShowWinner(false);\n      setCount(0);\n    });\n    socket.on('clicked', data => {\n      const newboard = [...data.board];\n      const no = data.count;\n      setCount(no);\n      console.log(\"count set to: \" + no);\n\n      if (data.val == 'X') {\n        setStateO(1);\n      } else {\n        setStateO(0);\n      }\n\n      setBoard(newboard);\n    });\n    socket.on('connect', data => {\n      //const x = data.user_db;\n      //setleaderboard(x);\n      console.log(data);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Enter your username: \", /*#__PURE__*/_jsxDEV(\"input\", {\n      ref: inputRef,\n      type: \"text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 28\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: assigneUser,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }, this), showBoard === true ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"right\",\n        children: [\"Players:\", /*#__PURE__*/_jsxDEV(\"ol\", {\n          children: player.map(users => /*#__PURE__*/_jsxDEV(ListItem, {\n            name: users\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 32\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"right1\",\n        children: [\"Spectator:\", /*#__PURE__*/_jsxDEV(\"ol\", {\n          children: spectator.map(users => /*#__PURE__*/_jsxDEV(ListItem, {\n            name: users\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 35\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Turn: \", turn]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this), showdraw === true ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"This game is a draw.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: reset,\n          children: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this) : null, showWinner === true ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Winner of the game is \", winner, \".\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Losser of the game is \", loser, \".\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: reset,\n          children: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this) : null, leaderboard != null ? /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"right2\",\n        children: [\"Leader Board:\", /*#__PURE__*/_jsxDEV(\"ol\", {\n          children: leaderboard.map(users => /*#__PURE__*/_jsxDEV(ListItem, {\n            name: users\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 37\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this) : null, /*#__PURE__*/_jsxDEV(Squares, {\n        onClickButton: onClickButton,\n        val: board\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 193,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Board, \"DxufaBS/RbDZ5kRXUNC/np933WQ=\");\n\n_c = Board;\n\nvar _c;\n\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"sources":["/home/ec2-user/environment/project2-sap258/src/Board.js"],"names":["React","useState","useEffect","useRef","Squares","ListItem","io","socket","currentUser","Board","props","board","setBoard","turn","setTurn","stateO","setStateO","player","setPlayer","spectator","setSpectator","inputRef","showBoard","setShowBoard","showWinner","setShowWinner","winner","setWinner","loser","setLoser","showdraw","setDraw","count","setCount","leaderboard","setleaderboard","assigneUser","inp","current","value","length","includes","console","log","emit","val","reset","user","calculateWinner","squares","lines","i","a","b","c","onClickButton","prevStateO","newboard","num","draw","on","server_players","pl","server_spectator","sp","data","x","win","los","no","map","users"],"mappings":"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","sourcesContent":["import './Board.css';\nimport React from 'react';\nimport { useState, useEffect, useRef } from 'react';\nimport { Squares } from './square.js';\nimport { ListItem } from './ListItem.js';\nimport io from 'socket.io-client';\n\nconst socket = io();\nvar currentUser;\nexport function Board(props) {\n  \n  const [board, setBoard] = useState([\" \"]);\n  const [turn, setTurn] = useState(\"\");\n  const [stateO, setStateO] = useState(0);\n  const [player, setPlayer] = useState([]);\n  const [spectator, setSpectator] = useState([]);\n  const inputRef = useRef(null);\n  const [showBoard, setShowBoard] = useState(false);\n  const [showWinner, setShowWinner] = useState(false);\n  const [winner, setWinner] = useState(\"\");\n  const [loser, setLoser] = useState(\"\");\n  const [showdraw, setDraw] = useState(false);\n  const [count, setCount] = useState(0);\n  const [leaderboard, setleaderboard] = useState([]);\n\n  function assigneUser(){\n    const inp = inputRef.current.value;\n    if(inp.length != 0 || currentUser == 0){\n      if(!player.includes(inp) && !spectator.includes(inp)){\n        setShowBoard(true);\n        const inp = inputRef.current.value;\n        currentUser = inp;\n        console.log(\"user input: \" + inp);\n        socket.emit('assigne', {val: inp});\n      }\n      else{\n        setShowBoard(false);\n        console.log(\"already in list\")\n        return;\n      }\n    }\n    else{\n      setShowBoard(false);\n      return\n    }\n  }\n  \n  function reset(){\n    if(player.includes(currentUser)){\n      socket.emit('reset', {user:currentUser});\n      console.log('Reseting ' + currentUser);\n    }\n    return;\n  }\n\n  function calculateWinner(squares) {\n    const lines = [\n      [0, 1, 2],\n      [3, 4, 5],\n      [6, 7, 8],\n      [0, 3, 6],\n      [1, 4, 7],\n      [2, 5, 8],\n      [0, 4, 8],\n      [2, 4, 6],\n    ];\n    for (let i = 0; i < lines.length; i++) {\n      const [a, b, c] = lines[i];\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n        return squares[a];\n      }\n    }\n  return null;\n  }\n\n  function onClickButton(i) {\n    //console.log(\"Current turn: \" + turn);\n    if(turn != currentUser || currentUser == null){\n      return;\n    }\n    if(board[i] == 'X' || board[i] == 'O'){\n      return;\n    }\n    if(stateO == 1){\n      board[i] = 'O';\n      setStateO((prevStateO) => prevStateO - 1);\n    }\n    if(stateO == 0){\n      board[i] = 'X';\n      setStateO((prevStateO) => prevStateO + 1);\n    }\n    \n    const newboard = [...board];\n    setBoard(newboard);\n    if(calculateWinner(board)){\n      socket.emit('clicked', {board: newboard, val: newboard[i], count:num});\n      if(currentUser == player[0]){\n        socket.emit('winner', {winner:player[0], loser:player[1]});\n      }\n      if(currentUser == player[1]){\n        socket.emit('winner', {winner:player[1], loser:player[0]});\n      }\n      return;\n    }\n    \n    if(currentUser == player[0] && player[1] != null){\n      socket.emit('turns_update', {user:player[1]});\n    }\n    else{\n      socket.emit('turns_update', {user:player[0]});\n    }\n    \n    var num = count + 1;\n    setCount(num);\n    console.log(num);\n    if(num == 9){\n      console.log(\"its a draw\")\n      setDraw(true);\n      socket.emit('draw', {draw:showdraw});\n    }\n    \n    socket.emit('clicked', {board: newboard, val: newboard[i], count:num});\n    return newboard;\n  };\n  \n  useEffect(() => {\n    \n    socket.on('assigne_players', (server_players) => {\n      const pl = [...server_players];\n      setPlayer(pl);\n    })\n    \n    socket.on('assigne_spectator', (server_spectator) => {\n      const sp = [...server_spectator];\n      setSpectator(sp);\n    })\n    \n    socket.on('first_turns', (data) => {\n      setTurn(data);\n      console.log(\"First turn: \" + data);\n    })\n    \n    socket.on('turns_update', (data) => {\n      var x = data.user;\n      setTurn(x);\n      console.log(\"Turn updaed to: \" + x);\n      console.log(\"after update turn: \" + turn);\n    })\n    \n    socket.on('winner', (data) =>{\n      var win = data.winner;\n      var los = data.loser;\n      setWinner(win);\n      setLoser(los);\n      setShowWinner(true);\n    })\n    \n    socket.on('draw', (data) => {\n      setDraw(true);\n    })\n    \n    socket.on('reset', (data) => {\n      console.log(\"Reseting the game now\")\n      setBoard([\"\"]);\n      setDraw(false);\n      setShowWinner(false);\n      setCount(0);\n    })\n    \n    socket.on('clicked', (data) => {\n      const newboard = [...data.board];\n      const no = data.count;\n      setCount(no);\n      console.log(\"count set to: \" + no);\n      if(data.val == 'X'){\n        setStateO(1);\n      }\n      else{\n        setStateO(0);\n      }\n      setBoard(newboard);\n    });\n    \n    socket.on('connect', (data) => {\n      //const x = data.user_db;\n      //setleaderboard(x);\n      console.log(data);\n    })\n    \n  }, []);\n  \n  return (\n    <div>\n      Enter your username: <input ref={inputRef} type='text' />\n      <button onClick={assigneUser}>Submit</button>\n      \n      {showBoard === true ?(\n      <div>\n      \n        <div class=\"right\">\n        Players:\n          <ol>\n          {player.map(users => <ListItem name={users} />)}\n          </ol>\n        </div>\n      \n        <div class=\"right1\">\n        Spectator:\n          <ol>\n          {spectator.map(users => <ListItem name={users} />)}\n          </ol>\n        </div>\n        \n        <p>Turn: {turn}</p>\n        \n        {showdraw === true ?(\n        <div>\n        <p>This game is a draw.</p>\n        <button onClick={reset}>Reset</button>\n        </div>\n        ) : null}\n        \n        {showWinner === true ?(\n        <div>\n        <p>Winner of the game is {winner}.</p>\n        <p>Losser of the game is {loser}.</p>\n        <button onClick={reset}>Reset</button>\n        </div>\n        ) : null}\n        \n        {leaderboard != null ?(\n        <div class =\"right2\">\n        Leader Board:\n          <ol>\n          {leaderboard.map(users => <ListItem name={users} />)}\n          </ol>\n        </div>\n        ) : null}\n        \n        <Squares onClickButton={onClickButton} val={board} />\n      </div>\n      ) : null}\n    </div>\n    \n  );\n}"]},"metadata":{},"sourceType":"module"}