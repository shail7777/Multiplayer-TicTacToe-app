{"ast":null,"code":"var _jsxFileName = \"/home/ec2-user/environment/project2-sap258/src/Board.js\",\n    _s = $RefreshSig$();\n\nimport './Board.css';\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { Squares } from './square.js';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io();\nexport function Board(props) {\n  _s();\n\n  const [board, setBoard] = useState([]);\n  const [stateO, setStateO] = useState(0);\n\n  function calculateWinner(squares) {\n    const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n    for (let i = 0; i < lines.length; i++) {\n      const [a, b, c] = lines[i];\n\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n        return squares[a];\n      }\n    }\n\n    return null;\n  }\n\n  function onClickButton(i) {\n    //console.log(\"Before onclick function borad: \" + board);\n    //console.log(\"Before onclick function sateO: \" + stateO);\n    console.log(\"board.length: \" + board.length);\n    console.log(\"board[i]: \" + board[i]);\n\n    if (board[i] == 'X' || board[i] == 'O') {\n      return null;\n    }\n\n    if (stateO == 1) {\n      board[i] = 'O';\n      setStateO(prevStateO => prevStateO - 1);\n    }\n\n    if (stateO == 0) {\n      board[i] = 'X';\n      setStateO(prevStateO => prevStateO + 1);\n    }\n\n    if (calculateWinner(board)) {\n      alert(\"you won madarchod\");\n      setBoard([]);\n      return;\n    }\n\n    const newboard = [...board];\n    setBoard(newboard);\n    socket.emit('clicked', {\n      board: newboard,\n      val: newboard[i]\n    }); //console.log(\"After onclick function borad: \" + newboard);\n    //console.log(\"After onclick function sateO: \" + stateO);\n\n    return newboard;\n  }\n\n  ;\n  useEffect(() => {\n    socket.on('clicked', data => {\n      //console.log(\"Before useEffect borad: \" + board);\n      //console.log(\"Before useEffect sateO: \" + stateO);\n      const newboard = [...data.board];\n\n      if (data.val == 'X') {\n        setStateO(1);\n      } else {\n        setStateO(0);\n      }\n\n      setBoard(newboard); //console.log(\"After useEffect borad: \" + newboard);\n      //console.log(\"After useEffect sateO: \" + stateO);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Squares, {\n      onClickButton: onClickButton,\n      val: board\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Board, \"AnQ6ZTXyG9C1penNEPorFOULY/s=\");\n\n_c = Board;\n\nvar _c;\n\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"sources":["/home/ec2-user/environment/project2-sap258/src/Board.js"],"names":["React","useState","useEffect","Squares","io","socket","Board","props","board","setBoard","stateO","setStateO","calculateWinner","squares","lines","i","length","a","b","c","onClickButton","console","log","prevStateO","alert","newboard","emit","val","on","data"],"mappings":"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","sourcesContent":["import './Board.css';\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { Squares } from './square.js';\nimport io from 'socket.io-client';\n\nconst socket = io();\n\nexport function Board(props) {\n  \n  const [board, setBoard] = useState([]);\n  const [stateO, setStateO] = useState(0);\n\n  function calculateWinner(squares) {\n    const lines = [\n      [0, 1, 2],\n      [3, 4, 5],\n      [6, 7, 8],\n      [0, 3, 6],\n      [1, 4, 7],\n      [2, 5, 8],\n      [0, 4, 8],\n      [2, 4, 6],\n    ];\n    for (let i = 0; i < lines.length; i++) {\n      const [a, b, c] = lines[i];\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n        return squares[a];\n      }\n    }\n  return null;\n  }\n\n\n  function onClickButton(i) {\n    //console.log(\"Before onclick function borad: \" + board);\n    //console.log(\"Before onclick function sateO: \" + stateO);\n    console.log(\"board.length: \" + board.length);\n    console.log(\"board[i]: \" + board[i]);\n    if(board[i] == 'X' || board[i] == 'O'){\n      return null;\n    }\n    \n    if(stateO == 1){\n      board[i] = 'O';\n      setStateO((prevStateO) => prevStateO - 1);\n    }\n    \n    if(stateO == 0){\n      board[i] = 'X';\n      setStateO((prevStateO) => prevStateO + 1);\n    }\n    \n    if(calculateWinner(board)){\n      alert(\"you won madarchod\");\n      setBoard([]);\n      return;\n    }\n    \n    const newboard = [...board];\n    setBoard(newboard);\n    socket.emit('clicked', {board: newboard, val: newboard[i]});\n    //console.log(\"After onclick function borad: \" + newboard);\n    //console.log(\"After onclick function sateO: \" + stateO);\n    return newboard;\n  };\n  \n  useEffect(() => {\n    socket.on('clicked', (data) => {\n      //console.log(\"Before useEffect borad: \" + board);\n      //console.log(\"Before useEffect sateO: \" + stateO);\n    \n      const newboard = [...data.board];\n      if(data.val == 'X'){\n        setStateO(1);\n      }\n      else{\n        setStateO(0);\n      }\n      setBoard(newboard);\n      \n      //console.log(\"After useEffect borad: \" + newboard);\n      //console.log(\"After useEffect sateO: \" + stateO);\n    });\n  }, []);\n  \n  return (\n    <div>\n      <Squares onClickButton={onClickButton} val={board} />\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}